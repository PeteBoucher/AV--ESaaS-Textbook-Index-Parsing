
<INDEX>
<GROUP>
<H0>$()</H0>
<H1>invoking, <PAGE><I>184</I></PAGE></H1>
<H1>JavaScript event handlers, <PAGE>182</PAGE></H1>
<H0>$.ajax, <PAGE><I>186</I></PAGE></H0>
</GROUP>
<GROUP><B>A</B>
<H0>ABC score</H0>
<H1>definition, <PAGE>310</PAGE></H1>
<H1>example, <PAGE><I>310</I></PAGE></H1>
<H1>method-level refactoring, <PAGE>314, 316</PAGE></H1>
<H0>Abstract factory pattern</H0>
<H1>DIP and OCP, <PAGE><I>381</I></PAGE></H1>
<H1>implementation, <PAGE><I>372</I></PAGE></H1>
<H1>OCP, <PAGE>371</PAGE></H1>
<H0>Abstraction</H0>
<H1>clarity improvement, <PAGE>16</PAGE></H1>
<H1>comments, <PAGE><I>308</I></PAGE></H1>
<H1>leaky, <PAGE><B>424</B></PAGE></H1>
<H0>A/B testing, feature flags, <PAGE><I>403</I></PAGE></H0>
<H0>Acceptance testing</H0>
<H1>Cucumber, <PAGE>224</PAGE></H1>
<H1>explicit <I>vs.</I> implicit requirements, <PAGE>236</PAGE></H1>
<H1>software, <PAGE>14</PAGE></H1>
<H0>Accessor method, Ruby objects, <PAGE>79</PAGE></H0>
<H0>Access token, authentication, <PAGE>143</PAGE></H0>
<H0>Achievable, SMART user stories, <PAGE>219</PAGE></H0>
<H0>Action caching, <PAGE>408, <I>409,</I> <I>411</I></PAGE></H0>
<H0>ActionController, Rails basics, <PAGE>100</PAGE></H0>
<H0>ActionView</H0>
<H1>link_to, <PAGE>112</PAGE></H1>
<H1>metaprogramming, <PAGE><I>113</I></PAGE></H1>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H0>ActiveModel, validation, <PAGE><I>137</I></PAGE></H0>
<H0>Active monitoring, <PAGE>406</PAGE></H0>
<H0>ActiveRecord</H0>
<H1>associations, <PAGE>148, <I>150</I></PAGE></H1>
<H1>basics, <PAGE><B>107</B></PAGE></H1>
<H1>caching, <PAGE>408, <I>409</I></PAGE></H1>
<H1>DataMapper comparison, <PAGE><I>150,</I> <I>151</I></PAGE></H1>
<H1>destroy, <PAGE>127</PAGE></H1>
<H1>DIP, <PAGE><I>379</I></PAGE></H1>
<H1>group method, <PAGE><I>158</I></PAGE></H1>
<H1>lifecycle hooks, <PAGE><I>139</I></PAGE></H1>
<H1>models, <PAGE><B>57</B></PAGE></H1>
<H1>proxy object, <PAGE><I>110</I></PAGE></H1>
<H1>Rails basics, <PAGE>100, 105, <I>108</I></PAGE></H1>
<H0>Active record architectural pattern</H0>
<H1>RDBMS, <PAGE>58</PAGE></H1>
<H1>Transform View, <PAGE><I>64</I></PAGE></H1>
<H0>ActiveRelation (ARel)</H0>
<H1>caching, <PAGE>410</PAGE></H1>
<H1>composable scopes, <PAGE>157</PAGE></H1>
<H0>ActiveSupport</H0>
<H1>decoration, <PAGE>373</PAGE></H1>
<H1>delegation, <PAGE><I>377</I></PAGE></H1>
<H0>ActiveView::Base, <PAGE>111</PAGE></H0>
<H0>ActiveX, <PAGE><I>417</I></PAGE></H0>
<H0>Adapter, jQuery, <PAGE><I>168</I></PAGE></H0>
<H0>Adapter pattern, DIP, <PAGE>379, <I>381</I></PAGE></H0>
<H0>Adaptive maintenance, <PAGE>299</PAGE></H0>
<H0>Add, Git basics, <PAGE><I>447</I></PAGE></H0>
<H0>Adleman, Leonard, <PAGE><I>414</I></PAGE></H0>
<H0>Adobe ActionScript, <PAGE><I>166</I></PAGE></H0>
<H0>Advice, AOP, <PAGE><I>141</I></PAGE></H0>
<H0>Aggregation, UML, <PAGE>368</PAGE></H0>
<H0>Agile Alliance, <PAGE>25</PAGE></H0>
<H0>Agile Development, Virtuous Triangle of Engineering SaaS, <PAGE><I>33,</I> <I>433</I></PAGE></H0>
<H0>Agile lifecycle</H0>
<H1>alternate names, <PAGE><I>25</I></PAGE></H1>
<H1>BDD pros and cons, <PAGE>249</PAGE></H1>
<H1>code reviews, <PAGE><B>335</B></PAGE></H1>
<H1>continuous refactoring, <PAGE>325</PAGE></H1>
<H1>decision to use, <PAGE><I>26</I></PAGE></H1>
<H1>deployment, <PAGE>398</PAGE></H1>
<H1>fallacy, <PAGE>32</PAGE></H1>
<H1>iteration example, <PAGE><I>29,</I> <I>216,</I> <I>436</I></PAGE></H1>
<H1>legacy code, <PAGE><B>298</B></PAGE></H1>
<H1>maintenance, <PAGE>320</PAGE></H1>
<H1>overview, <PAGE><I>256,</I> <I>298,</I> <I>362,</I> <I>394</I></PAGE></H1>
<H1>Pivotal Labs, <PAGE><I>222</I></PAGE></H1>
<H1>plan-and-document, <PAGE>386</PAGE></H1>
<H1>plan-and-document comparison, <PAGE>26, <I>245,</I> <I>289</I></PAGE></H1>
<H1>productivity comparisons, <PAGE><I>28</I></PAGE></H1>
<H1>purpose, <PAGE>216</PAGE></H1>
<H1>Rails use, <PAGE>5</PAGE></H1>
<H1>TDD, <PAGE>25</PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H1>variants, <PAGE><I>25</I></PAGE></H1>
<H1>Waterfall/Spiral comparison, <PAGE><I>436</I></PAGE></H1>
<H1>working code documentation, <PAGE><I>299</I></PAGE></H1>
<H0>Agile Manifesto</H0>
<H1>cost estimation, <PAGE><B>222</B></PAGE></H1>
<H1>development model, <PAGE>25</PAGE></H1>
<H1>inspiration for, <PAGE>239</PAGE></H1>
<H1>original proposal, <PAGE>xv</PAGE></H1>
<H1>overview, <PAGE><B>24</B></PAGE></H1>
<H0>Agile stakeholders, <PAGE><I>216</I></PAGE></H0>
<H0>AJAX, <XREF><I>see</I> Asynchronous JavaScript And XML (AJAX)</XREF></H0>
<H0>ajax function, <PAGE>186</PAGE></H0>
<H0>ALGOL, <PAGE><I>164</I></PAGE></H0>
<H0>Algorithm analysis, Turing Award, <PAGE><I>254</I></PAGE></H0>
<H0>alias_method_chain</H0>
<H1>decoration, <PAGE>373</PAGE></H1>
<H1>example, <PAGE><I>375</I></PAGE></H1>
<H0>Allen, Frances, <PAGE><I>440</I></PAGE></H0>
<H0>Alloy, requirements documentation, <PAGE><I>241</I></PAGE></H0>
<H0>Amaya, <PAGE><I>124</I></PAGE></H0>
<H0>Amazon</H0>
<H1>Agile lifecycle, <PAGE>27</PAGE></H1>
<H1>cost of being down, <PAGE>419</PAGE></H1>
<H1>household name, <PAGE>4</PAGE></H1>
<H1>page reload issues, <PAGE><I>417</I></PAGE></H1>
<H1>public cloud, <PAGE>395</PAGE></H1>
<H1>severity 1 bugs, <PAGE><I>344</I></PAGE></H1>
<H1>SOA <I>vs.</I> siloed software, <PAGE>7</PAGE></H1>
<H1>software education, <PAGE>xiv</PAGE></H1>
<H0>Amazon CloudFront, <PAGE>410</PAGE></H0>
<H0>Amazon Elastic Block Store, <PAGE>445</PAGE></H0>
<H0>Amazon Elastic Compute Cloud (EC2)</H0>
<H1>bookware VM, <PAGE><B>444</B></PAGE></H1>
<H1>FarmVille, <PAGE><I>12</I></PAGE></H1>
<H1>RightScale, <PAGE>397</PAGE></H1>
<H0>Amazon Machine Image (AMI), <PAGE>444</PAGE></H0>
<H0>Amazon Web Services</H0>
<H1>abusive database queries, <PAGE>411</PAGE></H1>
<H1>APIs, <PAGE>60</PAGE></H1>
<H1>cloud computing, <PAGE>12</PAGE></H1>
<H0>AMI, <XREF><I>see</I> Amazon Machine Image (AMI)</XREF></H0>
<H0>Amiko, DIP, <PAGE>378</PAGE></H0>
<H0>AmikoAdapter, DIP, <PAGE>379, <I>381</I></PAGE></H0>
<H0>And</H0>
<H1>Cucumber keyword, <PAGE>224</PAGE></H1>
<H1>imperative <I>vs.</I> declarative scenarios, <PAGE>236</PAGE></H1>
<H0>and_return, Red&ndash;Green&ndash;Refactor TDD, <PAGE>264</PAGE></H0>
<H0>Anonymous lambda expression, blocks, <PAGE>84</PAGE></H0>
<H0>Antipatterns</H0>
<H1>Data Clump, <PAGE>369</PAGE></H1>
<H1>definition, <PAGE>363</PAGE></H1>
<H1>overview, <PAGE><B>362</B></PAGE></H1>
<H0>AOL, <PAGE>42</PAGE></H0>
<H0>AOP, <XREF><I>see</I> Aspect-oriented programming (AOP)</XREF></H0>
<H0>Apache web server, <PAGE>42</PAGE></H0>
<H0>Apdex, <XREF><I>see</I> Application Performance Index (Apdex)</XREF></H0>
<H0>API key</H0>
<H1>refactoring, <PAGE><I>279</I></PAGE></H1>
<H1>TMDb, <PAGE><I>257,</I> 273, <I>274,</I> <I>276,</I> <I>277,</I> <I>279</I></PAGE></H1>
<H0>APM, <XREF><I>see</I> Application performance monitoring (APM)</XREF></H0>
<H0>Apple, JavaScript engines, <PAGE>207</PAGE></H0>
<H0>Apple Newton, <PAGE><I>176</I></PAGE></H0>
<H0>Apple Pages, code editing, <PAGE>445</PAGE></H0>
<H0>Application architecture</H0>
<H1>ActiveRecord for models, <PAGE><B>57</B></PAGE></H1>
<H1>client-server, <PAGE><B>42</B></PAGE></H1>
<H1>HTML and CSS, <PAGE><B>48</B></PAGE></H1>
<H1>HTTP and URIs, <PAGE><B>44</B></PAGE></H1>
<H1>MVC, <PAGE><B>54</B></PAGE></H1>
<H1>routes, controllers, REST, <PAGE><B>59</B></PAGE></H1>
<H1>Template Views, <PAGE><B>62</B></PAGE></H1>
<H1>three-tier and horizontal scaling, <PAGE><B>51</B></PAGE></H1>
<H0>ApplicationController</H0>
<H1>authentication, <PAGE>145</PAGE></H1>
<H1>filters and callbacks, <PAGE>160</PAGE></H1>
<H1>OmniAuth gem, <PAGE><I>144</I></PAGE></H1>
<H1>Rails app example, <PAGE>111</PAGE></H1>
<H0>Application Performance Index (Apdex), <PAGE>397</PAGE></H0>
<H0>Application Performance Monitoring (APM), <PAGE>405</PAGE></H0>
<H0>Application Programming Interface (API)</H0>
<H1>DIP, <PAGE>379</PAGE></H1>
<H1>jQuery, <PAGE><I>181,</I> <I>182</I></PAGE></H1>
<H1>JSON, <PAGE><B>198</B></PAGE></H1>
<H1>RESTful, <PAGE>59, <B>256</B></PAGE></H1>
<H1>silo bookstore service, <PAGE><I>8</I></PAGE></H1>
<H1>SOA bookstore service, <PAGE><I>9</I></PAGE></H1>
<H1>TMDb, <PAGE><I>257</I></PAGE></H1>
<H0>Application server, three-tier architecture, <PAGE>51</PAGE></H0>
<H0>Aptana, <PAGE>445</PAGE></H0>
<H0>Archetypal principals, <PAGE><I>415</I></PAGE></H0>
<H0>ARel, <XREF><I>see</I> ActiveRelation (ARel)</XREF></H0>
<H0>ArgumentError, TMDb, <PAGE>274, 276, <I>278</I></PAGE></H0>
<H0>Arguments</H0>
<H1>method calls, <PAGE><I>77</I></PAGE></H1>
<H1>methods on collections, <PAGE><I>86</I></PAGE></H1>
<H1>variable length lists, <PAGE><I>83</I></PAGE></H1>
<H0>Ariane 5 rocket explosion, <PAGE>4</PAGE></H0>
<H0>Arithmetic overflow attack, <PAGE>421</PAGE></H0>
<H0>Around-filter, caching, <PAGE><I>409</I></PAGE></H0>
<H0>Array, JavaScript, <PAGE>205</PAGE></H0>
<H0>Array class</H0>
<H1>each method, <PAGE>88</PAGE></H1>
<H1>Ruby objects, <PAGE>73</PAGE></H1>
<H0>Aspect-oriented programming (AOP)</H0>
<H1>COME FROM comparison, <PAGE><I>160</I></PAGE></H1>
<H1>overview, <PAGE><I>141</I></PAGE></H1>
<H0>Asset pipeline, <PAGE>173</PAGE></H0>
<H0>assigns(), RSpec, <PAGE>267</PAGE></H0>
<H0>Associations</H0>
<H1>ActiveRecord <I>vs.</I> DataMapper, <PAGE><I>150</I></PAGE></H1>
<H1>characteristics, <PAGE>153</PAGE></H1>
<H1>error checking, <PAGE>160</PAGE></H1>
<H1>example, <PAGE><I>147,</I> <I>148,</I> <I>150</I></PAGE></H1>
<H1>overview, <PAGE><B>147</B></PAGE></H1>
<H1>RESTful routes, <PAGE><B>154,</B> <I>157</I></PAGE></H1>
<H0>Asynchronous JavaScript And XML (AJAX)</H0>
<H1>coining of term, <PAGE>168</PAGE></H1>
<H1>effectiveness, <PAGE>202</PAGE></H1>
<H1>example, <PAGE><I>187,</I> <I>188</I></PAGE></H1>
<H1>Jasmine specs, <PAGE><I>195</I></PAGE></H1>
<H1>overview, <PAGE><B>185</B></PAGE></H1>
<H1>same-origin policy, <PAGE><I>202</I></PAGE></H1>
<H1>stubbing, <PAGE><I>202</I></PAGE></H1>
<H1>testing, <PAGE><B>190</B></PAGE></H1>
<H1>XHR, <PAGE><I>187</I></PAGE></H1>
<H1>XML use, <PAGE><I>168</I></PAGE></H1>
<H0>Atomic migration, <PAGE>400</PAGE></H0>
<H0>Attributes, RDBMS, <PAGE>57</PAGE></H0>
<H0>Authentication</H0>
<H1>definition, <PAGE>142, 395</PAGE></H1>
<H1>example, <PAGE><I>144</I></PAGE></H1>
<H0>Authorization, <PAGE><I>142</I></PAGE></H0>
<H0>Automatic theorem proving, <PAGE>287</PAGE></H0>
<H0>Automation</H0>
<H1>autotest, <PAGE><I>260</I></PAGE></H1>
<H1>FIRST, <PAGE>258</PAGE></H1>
<H1>productivity improvement, <PAGE>17</PAGE></H1>
<H1>tests with Cucumber, <PAGE>246</PAGE></H1>
<H0>Automation for repeatability, Bundler, <PAGE>102</PAGE></H0>
<H0>Autotest</H0>
<H1>automation with, <PAGE><I>260</I></PAGE></H1>
<H1>usage, <PAGE><I>260</I></PAGE></H1>
<H0>Availability</H0>
<H1>definition, <PAGE>395</PAGE></H1>
<H1>quantification, <PAGE><B>404</B></PAGE></H1>
</GROUP>
<GROUP><B>B</B>
<H0>Backfilling, <PAGE><I>322</I></PAGE></H0>
<H0>Background keyword, TMDb example, <PAGE><I>235</I></PAGE></H0>
<H0>Backlog, user stories, <PAGE>220</PAGE></H0>
<H0>Backtrace, RASP, <PAGE>117</PAGE></H0>
<H0>Backus, John, <PAGE><I>16,</I> <I>164</I></PAGE></H0>
<H0>Backus-Naur form, <PAGE><I>164</I></PAGE></H0>
<H0>Backwards traceability, <PAGE>244</PAGE></H0>
<H0>Bar#foo, <PAGE><I>259</I></PAGE></H0>
<H0>Base URI, <PAGE><I>45</I></PAGE></H0>
<H0>Basic blocks</H0>
<H1>control flow graph, <PAGE>310</PAGE></H1>
<H1>testing approaches, <PAGE>285</PAGE></H1>
<H0>BasicObject class, Ruby objects, <PAGE>74</PAGE></H0>
<H0>BDD, <XREF><I>see</I> Behavior-driven development (BDD)</XREF></H0>
<H0>BDUF, <XREF><I>see</I> Big Design Up Front (BDUF)</XREF></H0>
<H0>Beautiful code</H0>
<H1>definition, <PAGE>13</PAGE></H1>
<H1>maintenance costs, <PAGE>309</PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H0>Beck, Kent, <PAGE><I>25</I></PAGE></H0>
<H0>before(:all), dependencies, <PAGE>291</PAGE></H0>
<H0>before block</H0>
<H1>factory, <PAGE>270</PAGE></H1>
<H1>TMDb, <PAGE>266, 267, <I>267</I></PAGE></H1>
<H0>Before-filters</H0>
<H1>caching, <PAGE>408, <I>409</I></PAGE></H1>
<H1>force_ssl, <PAGE><I>415</I></PAGE></H1>
<H1>&quot;owning&quot; resources, <PAGE><I>156</I></PAGE></H1>
<H0>before_save</H0>
<H1>ActiveRecord lifecycle hooks, <PAGE><I>139</I></PAGE></H1>
<H1>example, <PAGE><I>140</I></PAGE></H1>
<H0>Behavioral patterns, GoF, <PAGE><I>364</I></PAGE></H0>
<H0>Behavior diagrams, UML, <PAGE><I>367</I></PAGE></H0>
<H0>Behavior-driven development (BDD)</H0>
<H1>Agile, <PAGE>xv</PAGE></H1>
<H1>basic ecosystem, <PAGE><I>238</I></PAGE></H1>
<H1>bug testing, <PAGE>344</PAGE></H1>
<H1>Jasmine, <PAGE>196</PAGE></H1>
<H1>legacy code, <PAGE>300</PAGE></H1>
<H1>overview, <PAGE><B>216</B></PAGE></H1>
<H1>pros and cons, <PAGE><B>247</B></PAGE></H1>
<H1>TMDb example, <PAGE>231</PAGE></H1>
<H1>UI, <PAGE>227</PAGE></H1>
<H0>belongs_to</H0>
<H1>associations, <PAGE>149</PAGE></H1>
<H1>example, <PAGE><I>150</I></PAGE></H1>
<H0>Berners-Lee, Tim, <PAGE><I>66</I></PAGE></H0>
<H0>Bezos, Jeff, <PAGE>59, <I>332</I></PAGE></H0>
<H0>Big Brother Bird, <PAGE>425</PAGE></H0>
<H0>Big Design Up Front (BDUF), <PAGE><I>21,</I> 386</PAGE></H0>
<H0>Bit blit, <PAGE>16</PAGE></H0>
<H0>Black-box tests, <PAGE>14, 285</PAGE></H0>
<H0>Blocks</H0>
<H1>methods on collections, <PAGE><I>86</I></PAGE></H1>
<H1>overview, <PAGE><B>84</B></PAGE></H1>
<H1>Rails basics, <PAGE>100, 105</PAGE></H1>
<H1>Rails reuse, <PAGE>6</PAGE></H1>
<H1>XML Builder, <PAGE><I>87</I></PAGE></H1>
<H0>Booch, Grady, <PAGE><I>366</I></PAGE></H0>
<H0>Bookstore service</H0>
<H1>siloed software, <PAGE><I>8</I></PAGE></H1>
<H1>silo <I>vs.</I> SOA, <PAGE>8</PAGE></H1>
<H1>SOA, <PAGE><I>9</I></PAGE></H1>
<H0>Bookware VM</H0>
<H1>Amazon EC2, <PAGE><B>444</B></PAGE></H1>
<H1>Rails basics, <PAGE>100, 102</PAGE></H1>
<H1>VirtualBox, <PAGE><B>443</B></PAGE></H1>
<H0>Bot, input checks, <PAGE><I>137</I></PAGE></H0>
<H0>Bottlenecks, finding, <PAGE><B>405</B></PAGE></H0>
<H0>Bottom-up integration, <PAGE>286</PAGE></H0>
<H0>Branch coverage (C1), <PAGE>282</PAGE></H0>
<H0>Branches</H0>
<H1>changes to master, <PAGE>354</PAGE></H1>
<H1>commit example, <PAGE><I>340</I></PAGE></H1>
<H1>effective use, <PAGE><B>339</B></PAGE></H1>
<H1>Git, <PAGE><I>341</I></PAGE></H1>
<H1>Git commands, <PAGE><I>342</I></PAGE></H1>
<H1>long-lived, <PAGE><I>343</I></PAGE></H1>
<H1>merging or switching, <PAGE>354</PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>Brooks, Fred, Jr., <PAGE>19, <I>330</I></PAGE></H0>
<H0>Buffer overflow attack, <PAGE>420</PAGE></H0>
<H0>Bugs</H0>
<H1>caching behavior, <PAGE>423</PAGE></H1>
<H1>reporting and fixing, <PAGE><B>343</B></PAGE></H1>
<H0>Bundler</H0>
<H1>automation for repeatability, <PAGE>102</PAGE></H1>
<H1>Cucumber, <PAGE>226</PAGE></H1>
<H1>development <I>vs.</I> production environments, <PAGE>454</PAGE></H1>
<H1>gem modification, <PAGE>129</PAGE></H1>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H0>But, Cucumber keyword, <PAGE>224</PAGE></H0>
<H0>button_to, Rails app example, <PAGE>128</PAGE></H0>
</GROUP>
<GROUP><B>C</B>
<H0>CA, <XREF><I>see</I> Certificate authority (CA)</XREF></H0>
<H0>C0 coverage, <PAGE>282, <I>283,</I> <I>307</I></PAGE></H0>
<H0>C1 coverage, <PAGE>282</PAGE></H0>
<H0>C2 coverage, <PAGE>283</PAGE></H0>
<H0>Cache invalidation, <PAGE>407</PAGE></H0>
<H0>Caching</H0>
<H1>bugs leading to, <PAGE>423</PAGE></H1>
<H1>code example, <PAGE><I>409</I></PAGE></H1>
<H1>example, <PAGE><I>408</I></PAGE></H1>
<H1>object storage, <PAGE><I>411</I></PAGE></H1>
<H1>rendering and database improvement, <PAGE><B>407</B></PAGE></H1>
<H0>CAD, <XREF><I>see</I> Computer Aided Design (CAD) tools</XREF></H0>
<H0>Callbacks</H0>
<H1>authentication, <PAGE>143</PAGE></H1>
<H1>event-driven programming, <PAGE><I>190</I></PAGE></H1>
<H1>JavaScript, <PAGE><B>180</B></PAGE></H1>
<H1>pitfalls, <PAGE>159</PAGE></H1>
<H0>Call coverage (S1), <PAGE>282</PAGE></H0>
<H0>Campfire</H0>
<H1>information sharing, <PAGE>222</PAGE></H1>
<H1>pull requests, <PAGE>335</PAGE></H1>
<H0>Capability Maturity Model (CMM), <PAGE><I>23</I></PAGE></H0>
<H0>Capistrano, <PAGE>398</PAGE></H0>
<H0>Capybara</H0>
<H1>BDD pros and cons, <PAGE>247</PAGE></H1>
<H1>overview, <PAGE><B>224</B></PAGE></H1>
<H1>running, <PAGE><B>226</B></PAGE></H1>
<H1>testing tools relationship, <PAGE><I>248</I></PAGE></H1>
<H1>use, <PAGE><I>225</I></PAGE></H1>
<H0>Cardinality, associations, <PAGE><I>147</I></PAGE></H0>
<H0>Cartesian product</H0>
<H1>foreign keys, <PAGE>147</PAGE></H1>
<H1>through-associations, <PAGE>152</PAGE></H1>
<H0>Cascading Style Sheets (CSS)</H0>
<H1>AJAX, <PAGE>188</PAGE></H1>
<H1>constructs, <PAGE><I>49</I></PAGE></H1>
<H1>content rendering, <PAGE><I>50</I></PAGE></H1>
<H1>dynamic HTML, <PAGE><I>180</I></PAGE></H1>
<H1>editor for, <PAGE><I>124</I></PAGE></H1>
<H1>flash message, <PAGE><I>124</I></PAGE></H1>
<H1>Haml constructs, <PAGE><I>63</I></PAGE></H1>
<H1>introduction, <PAGE><I>49</I></PAGE></H1>
<H1>Lo-Fi UI, <PAGE>230</PAGE></H1>
<H1>overview, <PAGE><B>48</B></PAGE></H1>
<H0>Cassandra, DataMapper, <PAGE><I>150</I></PAGE></H0>
<H0>CDN, <XREF><I>see</I> Content delivery network (CDN)</XREF></H0>
<H0>Cerf, Vinton E. &quot;Vint,&quot; <PAGE><I>44</I></PAGE></H0>
<H0>Certificate authority (CA), <PAGE>415</PAGE></H0>
<H0>Change control board, maintenance requests, <PAGE>321</PAGE></H0>
<H0>change event, JavaScript, <PAGE>183, <I>185</I></PAGE></H0>
<H0>Change management</H0>
<H1>definition, <PAGE>351</PAGE></H1>
<H1>plan-and-document, <PAGE>244, 320</PAGE></H1>
<H0>Change points, legacy code, <PAGE>300, 303</PAGE></H0>
<H0>Change request forms, <PAGE>320</PAGE></H0>
<H0>Change requests, maintenance, <PAGE>320</PAGE></H0>
<H0>Characterization tests</H0>
<H1>creation, <PAGE><B>304</B></PAGE></H1>
<H1>legacy code, <PAGE>300</PAGE></H1>
<H1>TimeSetter, <PAGE><I>307</I></PAGE></H1>
<H0>CI, <XREF><I>see</I> Continuous integration (CI) testing</XREF></H0>
<H0>Clarity via conciseness, productivity improvement, <PAGE>16</PAGE></H0>
<H0>Class</H0>
<H1>definition in Ruby, <PAGE><I>78</I></PAGE></H1>
<H1>private methods, <PAGE>388</PAGE></H1>
<H1>Ruby objects, <PAGE><I>74,</I> <B>78</B></PAGE></H1>
<H0>Class class, Ruby objects, <PAGE><I>74</I></PAGE></H0>
<H0>Class diagram, UML, <PAGE><I>367,</I> 368, <I>371,</I> <I>377</I></PAGE></H0>
<H0>Class inheritance, Ruby objects, <PAGE>74</PAGE></H0>
<H0>ClassName, method calls, <PAGE>76</PAGE></H0>
<H0>Class&ndash;Responsibility&ndash;Collaborator (CRC) cards, <PAGE><I>304,</I> <I>305</I></PAGE></H0>
<H0>Class variables</H0>
<H1>cohesion, <PAGE><I>369</I></PAGE></H1>
<H1>Ruby, <PAGE>79</PAGE></H1>
<H0>click event, authentication, <PAGE>180</PAGE></H0>
<H0>Client pull, server push comparison, <PAGE><I>47</I></PAGE></H0>
<H0>Client-Server Architecture, <PAGE><B>42</B></PAGE></H0>
<H1>design pattern, <PAGE>43</PAGE></H1>
<H1>high-level view, <PAGE><I>42</I></PAGE></H1>
<H0>Client-side JavaScript</H0>
<H1>definition, <PAGE>166</PAGE></H1>
<H1>DRY, <PAGE><I>167</I></PAGE></H1>
<H1>tips for Ruby programmers, <PAGE><B>169</B></PAGE></H1>
<H0>Clone, version control, <PAGE>336</PAGE></H0>
<H0>Closures</H0>
<H1>Rails reuse, <PAGE>6</PAGE></H1>
<H1>Ruby blocks, <PAGE>84</PAGE></H1>
<H0>Cloud computing, <PAGE><B>10</B></PAGE></H0>
<H1>definition, <PAGE>12</PAGE></H1>
<H1>Heroku deployment, <PAGE><B>451</B></PAGE></H1>
<H1>PaaS, <PAGE>395</PAGE></H1>
<H1>performance and scalability, <PAGE>422</PAGE></H1>
<H0>CloudFoundry, <PAGE>395</PAGE></H0>
<H0>CloudFront, <PAGE>410</PAGE></H0>
<H0>CLU language, yield basis, <PAGE>89, <I>90</I></PAGE></H0>
<H0>Clusters, <PAGE>11</PAGE></H0>
<H0>CMM, <XREF><I>see</I> Capability Maturity Model (CMM)</XREF></H0>
<H0>COCOMO, <XREF><I>see</I> Constructive Cost Model (COCOMO)</XREF></H0>
<H0>Codd, Edgar F. &quot;Ted,&quot; <PAGE><I>57</I></PAGE></H0>
<H0>Code reviews</H0>
<H1>necessity, <PAGE><B>335</B></PAGE></H1>
<H1>plan-and-document, <PAGE>348</PAGE></H1>
<H0>Code smells</H0>
<H1>avoidance, <PAGE>324</PAGE></H1>
<H1>definition, <PAGE>310</PAGE></H1>
<H1>examples, <PAGE><I>311,</I> <I>326</I></PAGE></H1>
<H1>overview, <PAGE><B>309</B></PAGE></H1>
<H0>Code-to-test ratio</H0>
<H1>definition, <PAGE>282</PAGE></H1>
<H1>minimum requirements, <PAGE>290</PAGE></H1>
<H0>Coding standards, <PAGE><I>333</I></PAGE></H0>
<H0>CoffeeScript, <PAGE>173, 207, <I>208,</I> 451</PAGE></H0>
<H0>Cohesion</H0>
<H1>definition, <PAGE>369</PAGE></H1>
<H1>example, <PAGE><I>369</I></PAGE></H1>
<H1>refactoring, <PAGE>316</PAGE></H1>
<H0>Collections</H0>
<H1>Enumerable, <PAGE>88</PAGE></H1>
<H1>has_many, <PAGE>149</PAGE></H1>
<H1>methods on, <PAGE><I>86</I></PAGE></H1>
<H1>operators, <PAGE>85</PAGE></H1>
<H1>proxy object, <PAGE><I>110</I></PAGE></H1>
<H1>reuse, <PAGE>17</PAGE></H1>
<H0>COME FROM, <PAGE><I>160</I></PAGE></H0>
<H0>Comments</H0>
<H1>bad example, <PAGE><I>308</I></PAGE></H1>
<H1>level of abstraction, <PAGE><I>308</I></PAGE></H1>
<H1>overview, <PAGE><B>308</B></PAGE></H1>
<H0>Commit</H0>
<H1>branch example, <PAGE><I>340</I></PAGE></H1>
<H1>confusion with push, <PAGE>453</PAGE></H1>
<H1>Git basics, <PAGE>446, <I>447</I></PAGE></H1>
<H1>large commits, <PAGE>453</PAGE></H1>
<H0>Commit squashing, Git, <PAGE><I>337</I></PAGE></H0>
<H0>Common Vulnerabilities and Exposures database, <PAGE>420</PAGE></H0>
<H0>Communication</H0>
<H1>client pull <I>vs.</I> server push, <PAGE><I>47</I></PAGE></H1>
<H1>cookies, <PAGE><I>46</I></PAGE></H1>
<H1>HTTP request, <PAGE><I>45</I></PAGE></H1>
<H1>HTTP and URIs, <PAGE><B>44</B></PAGE></H1>
<H1>SaaS demands, <PAGE>10</PAGE></H1>
<H0>Comparison operators, JavaScript, <PAGE>206</PAGE></H0>
<H0>Compiled languages, continuous integration, <PAGE><I>399</I></PAGE></H0>
<H0>Compilers</H0>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>JavaScript, <PAGE>207</PAGE></H1>
<H1>Turing Award, <PAGE><I>164,</I> <I>440</I></PAGE></H1>
<H0>Complex feature, feature flags, <PAGE><I>403</I></PAGE></H0>
<H0>Complexity, SOLID, <PAGE>365</PAGE></H0>
<H0>Composition</H0>
<H1>duck typing, <PAGE>378</PAGE></H1>
<H1>preference to inheritance, <PAGE><I>377</I></PAGE></H1>
<H1>UML, <PAGE>368</PAGE></H1>
<H0>CompuServe, <PAGE>42</PAGE></H0>
<H0>Computer Aided Design (CAD) tools, <PAGE>17</PAGE></H0>
<H0>Conciseness</H0>
<H1>productivity improvement, <PAGE>16</PAGE></H1>
<H1>reflection and metaprogramming, <PAGE><I>113</I></PAGE></H1>
<H0>Concurrent Versions System (CVS), <PAGE>355</PAGE></H0>
<H0>Configuration management</H0>
<H1>IEEE 828-2012, <PAGE><I>352</I></PAGE></H1>
<H1>varieties, <PAGE>351</PAGE></H1>
<H0>Configuration setting, Git basics, <PAGE>446</PAGE></H0>
<H0>Construction, RUP phase, <PAGE>21</PAGE></H0>
<H0>Constructive confrontation, people management, <PAGE>348</PAGE></H0>
<H0>Constructive Cost Model (COCOMO), <PAGE><I>242</I></PAGE></H0>
<H0>Constructors, JavaScript, <PAGE><B>174</B></PAGE></H0>
<H0>Content delivery network (CDN), <PAGE>410</PAGE></H0>
<H0>Continuous deployment, <PAGE><B>398</B></PAGE></H0>
<H0>Continuous integration (CI) testing</H0>
<H1>compiled languages, <PAGE><I>399</I></PAGE></H1>
<H1>definition, <PAGE>14</PAGE></H1>
<H1>deployment, <PAGE><B>398</B></PAGE></H1>
<H1>rare conditions, <PAGE>421</PAGE></H1>
<H0>Control flow coverage, <PAGE>285</PAGE></H0>
<H0>Control flow graph, <PAGE>310, <I>310</I></PAGE></H0>
<H0>Controllers</H0>
<H1>completion, <PAGE><I>263</I></PAGE></H1>
<H1>development, <PAGE><I>262</I></PAGE></H1>
<H1>fat, <PAGE>129</PAGE></H1>
<H1>function in MVC, <PAGE>259</PAGE></H1>
<H1>index RESTful action, <PAGE><I>112</I></PAGE></H1>
<H1>MVC, <PAGE>54</PAGE></H1>
<H1>overview, <PAGE><B>59</B></PAGE></H1>
<H1>private methods, security issues, <PAGE>417</PAGE></H1>
<H1>Rails app example, <PAGE><B>111</B></PAGE></H1>
<H1>routes, <PAGE><I>104</I></PAGE></H1>
<H1>show action, <PAGE><I>114</I></PAGE></H1>
<H1>TMDb example, <PAGE><I>267</I></PAGE></H1>
<H1>validation interactions, <PAGE><I>139</I></PAGE></H1>
<H0>convert method</H0>
<H1>characterization tests, <PAGE>306</PAGE></H1>
<H1>example, <PAGE>312</PAGE></H1>
<H1>refactoring, <PAGE>314, 318</PAGE></H1>
<H0>Cookies, HTTP, <PAGE><I>46</I></PAGE></H0>
<H0>Corrective maintenance, <PAGE>298</PAGE></H0>
<H0>Cost estimation</H0>
<H1>Agile lifecycle, <PAGE><B>222</B></PAGE></H1>
<H1>change management, <PAGE>244</PAGE></H1>
<H1>plan-and-document, <PAGE>241</PAGE></H1>
<H0>Cost of software design, pitfalls, <PAGE>32</PAGE></H0>
<H0>CouchDB, DataMapper, <PAGE><I>150</I></PAGE></H0>
<H0>Coverage concepts, <PAGE><B>282,</B> <I>282</I></PAGE></H0>
<H0>CRC cards, <XREF><I>see</I> Class&ndash;Responsibility&ndash;Collaborator (CRC) cards</XREF></H0>
<H0>create</H0>
<H1>associations, <PAGE>154</PAGE></H1>
<H1>form submission, <PAGE><B>120</B></PAGE></H1>
<H1>Rails app example, <PAGE>108, <I>122</I></PAGE></H1>
<H1>replacement for, <PAGE><I>138</I></PAGE></H1>
<H0>create!, ActiveRecord, <PAGE>107</PAGE></H0>
<H0>Creational patterns, GoF, <PAGE><I>364</I></PAGE></H0>
<H0>Crisscross merge, Git, <PAGE>343</PAGE></H0>
<H0>Cross-site request forgery (CSRF), <PAGE>415</PAGE></H0>
<H0>Cross-site scripting</H0>
<H1>characteristics, <PAGE>416</PAGE></H1>
<H1>fuzz testing, <PAGE>286</PAGE></H1>
<H0>CRUD</H0>
<H1>associations, <PAGE>155</PAGE></H1>
<H1>definition, <PAGE>58</PAGE></H1>
<H1>edit/update and destroy, <PAGE><B>125</B></PAGE></H1>
<H1>models, <PAGE>107</PAGE></H1>
<H1>Rails basics, <PAGE>102</PAGE></H1>
<H1>routes, <PAGE><I>60</I></PAGE></H1>
<H1>views, <PAGE>111</PAGE></H1>
<H0>Cruft, deployment abuse, <PAGE>423</PAGE></H0>
<H0>CSRF, <XREF><I>see</I> Cross-site request forgery (CSRF)</XREF></H0>
<H0>csrf_meta_tags, <PAGE>416</PAGE></H0>
<H0>CSS Zen Garden, <PAGE><I>48</I></PAGE></H0>
<H0>Cucumber</H0>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>BDD ecosystem, <PAGE><I>238</I></PAGE></H1>
<H1>BDD pros and cons, <PAGE>247, 249</PAGE></H1>
<H1>bug testing, <PAGE>344</PAGE></H1>
<H1>characterization tests, <PAGE>306</PAGE></H1>
<H1>example, <PAGE><I>224,</I> <I>227,</I> <I>234</I></PAGE></H1>
<H1>integration tests, <PAGE><I>259</I></PAGE></H1>
<H1>keywords, <PAGE><I>224</I></PAGE></H1>
<H1>overview, <PAGE><B>224</B></PAGE></H1>
<H1>running, <PAGE><B>226</B></PAGE></H1>
<H1>scenario comparisons, <PAGE>236</PAGE></H1>
<H1>test-automation, <PAGE>246</PAGE></H1>
<H1>testing tools relationship, <PAGE><I>248</I></PAGE></H1>
<H1>TMDb example, <PAGE>231</PAGE></H1>
<H1>UML diagrams, <PAGE><I>367</I></PAGE></H1>
<H0>Curly braces, poetry mode, <PAGE>76</PAGE></H0>
<H0>Current branch, <PAGE>340</PAGE></H0>
<H0>Customer collaboration, maintenance, <PAGE>320</PAGE></H0>
<H0>CVS, <XREF><I>see</I> Concurrent Versions System (CVS)</XREF></H0>
<H0>Cyclomatic complexity</H0>
<H1>definition, <PAGE>310</PAGE></H1>
<H1>example, <PAGE><I>310</I></PAGE></H1>
<H1>invention, <PAGE><I>310</I></PAGE></H1>
</GROUP>
<GROUP><B>D</B>
<H0>Dahl, Ole-Johan, <PAGE><I>134</I></PAGE></H0>
<H0>Dapper, <PAGE>425</PAGE></H0>
<H0>Database index</H0>
<H1>abusive queries, <PAGE>413</PAGE></H1>
<H1>example, <PAGE><I>412</I></PAGE></H1>
<H0>Databases</H0>
<H1>abusive queries, <PAGE><B>411,</B> <I>412</I></PAGE></H1>
<H1>ActiveRecord lifecycle hooks, <PAGE><I>139</I></PAGE></H1>
<H1>caching, <PAGE><B>407</B></PAGE></H1>
<H1>legacy code exploration, <PAGE><I>302</I></PAGE></H1>
<H1>manual modification, <PAGE>129</PAGE></H1>
<H1>purpose, <PAGE><I>53</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>104</B></PAGE></H1>
<H0>Database transaction, spec run in, <PAGE><I>270</I></PAGE></H0>
<H0>Datacenters, virtual machines, <PAGE>11</PAGE></H0>
<H0>Data Clump, design smell, <PAGE>369</PAGE></H0>
<H0>Data consistency, RDBMS scalability, <PAGE>64</PAGE></H0>
<H0>Data hiding, Ruby <I>vs.</I> Java, <PAGE>79</PAGE></H0>
<H0>Data integrity, <PAGE>396</PAGE></H0>
<H0>DataMapper</H0>
<H1>ActiveRecord comparison, <PAGE><I>150</I></PAGE></H1>
<H1>Google AppEngine, <PAGE><I>151</I></PAGE></H1>
<H0>Data protection, security, <PAGE><B>414</B></PAGE></H0>
<H0>Data race attack, <PAGE>421</PAGE></H0>
<H0>DDoS, <XREF><I>see</I> Distributed denial of service (DDoS)</XREF></H0>
<H0>Debugger, Ruby, <PAGE><I>123</I></PAGE></H0>
<H0>debugger statement, Rails app example, <PAGE>119</PAGE></H0>
<H0>Debugging</H0>
<H1>conventional, TDD comparison, <PAGE><B>291</B></PAGE></H1>
<H1>delta debugging, <PAGE>435</PAGE></H1>
<H1>JavaScript, <PAGE><I>172</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>117</B></PAGE></H1>
<H0>Declarative scenarios</H0>
<H1>reuse, <PAGE><I>237</I></PAGE></H1>
<H1>testing, <PAGE><B>236</B></PAGE></H1>
<H0>Declared exceptions, undeclared comparison, <PAGE><I>275</I></PAGE></H0>
<H0>Decompose Conditional</H0>
<H1>application, <PAGE>316</PAGE></H1>
<H1>example, <PAGE><I>317</I></PAGE></H1>
<H1>refactoring, <PAGE>314</PAGE></H1>
<H0>Decorator pattern</H0>
<H1>application, <PAGE><I>374</I></PAGE></H1>
<H1>caching, <PAGE><I>409</I></PAGE></H1>
<H1>example, <PAGE><I>374</I></PAGE></H1>
<H1>function, <PAGE>373</PAGE></H1>
<H0>Defensive programming, basic philosophy, <PAGE>404</PAGE></H0>
<H0>Define&ndash;use (DU) coverage, <PAGE>285</PAGE></H0>
<H0>Deflating, <PAGE><I>173</I></PAGE></H0>
<H0>Delegation pattern</H0>
<H1>duck typing, <PAGE>378</PAGE></H1>
<H1>example, <PAGE><I>373</I></PAGE></H1>
<H1>preference to inheritance, <PAGE><I>377</I></PAGE></H1>
<H0>Delta debugging, <PAGE>435</PAGE></H0>
<H0>Demeter Principle</H0>
<H1>behavior example, <PAGE><I>383</I></PAGE></H1>
<H1>overview, <PAGE><B>382</B></PAGE></H1>
<H1>violation example, <PAGE><I>382</I></PAGE></H1>
<H0>Demeter Project, <PAGE><I>382</I></PAGE></H0>
<H0>Denial-of-service attack, <PAGE>417, 426</PAGE></H0>
<H0>Dependability, SaaS demands, <PAGE>11</PAGE></H0>
<H0>Dependencies</H0>
<H1>development <I>vs.</I> production environments, <PAGE>454</PAGE></H1>
<H1>replacing with seams, <PAGE><B>313</B></PAGE></H1>
<H0>Dependency Injection Principle (DIP), <PAGE><B>378</B></PAGE></H0>
<H1>cached object storage, <PAGE><I>411</I></PAGE></H1>
<H1>example, <PAGE><I>381</I></PAGE></H1>
<H1>OCP impact, <PAGE><I>381</I></PAGE></H1>
<H0>Deployment</H0>
<H1>continuous, <PAGE><B>398</B></PAGE></H1>
<H1>cruft accumulation, <PAGE>423</PAGE></H1>
<H1>feature flags, <PAGE><B>400</B></PAGE></H1>
<H1>Heroku, <PAGE><B>451</B></PAGE></H1>
<H1>overview, <PAGE><B>394</B></PAGE></H1>
<H0>describe</H0>
<H1>Jasmine, <PAGE>192</PAGE></H1>
<H1>TMDb, <PAGE>266, 267, 272</PAGE></H1>
<H0>Deserializing, <PAGE>57, 199</PAGE></H0>
<H0>Design patterns</H0>
<H1>classes, <PAGE><B>362</B></PAGE></H1>
<H1>client-server architecture, <PAGE>43</PAGE></H1>
<H1>Demeter Principle, <PAGE><B>382</B></PAGE></H1>
<H1>DIP, <PAGE><B>378</B></PAGE></H1>
<H1>expression, <PAGE><I>385</I></PAGE></H1>
<H1>GoF, <PAGE><I>364</I></PAGE></H1>
<H1>LSP, <PAGE><B>376</B></PAGE></H1>
<H1>OCP, <PAGE><B>371</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>386</B></PAGE></H1>
<H1>reuse, <PAGE>17</PAGE></H1>
<H1>SRP, <PAGE><B>369</B></PAGE></H1>
<H1>UML, <PAGE><B>366</B></PAGE></H1>
<H0>Design reviews</H0>
<H1>plan-and-document, <PAGE>348, 386</PAGE></H1>
<H0>Design smells</H0>
<H1>Data Clump, <PAGE>369</PAGE></H1>
<H1>definition, <PAGE><I>311,</I> 363</PAGE></H1>
<H1>Demeter violations, <PAGE>382</PAGE></H1>
<H1>fixing, <PAGE><I>390</I></PAGE></H1>
<H0>destroy method, Rails app example, <PAGE>109, <B>125,</B> 127</PAGE></H0>
<H0>Destructive methods, usage, <PAGE><I>86</I></PAGE></H0>
<H0>Developer keys, RESTful APIs, <PAGE><I>257</I></PAGE></H0>
<H0>Development database, legacy code exploration, <PAGE><I>302</I></PAGE></H0>
<H0>DigiNotar, <PAGE>426</PAGE></H0>
<H0>Dijkstra, Edsger W., <PAGE><I>160,</I> <I>287</I></PAGE></H0>
<H0>DIP, <XREF><I>see</I> Dependency Injection Principle (DIP)</XREF></H0>
<H0>Directory structure, Rails app example, <PAGE><I>101</I></PAGE></H0>
<H0>Disciplined processes, <PAGE><I>21</I></PAGE></H0>
<H0>Distributed denial of service (DDoS), <PAGE>426</PAGE></H0>
<H0>DNS, <XREF><I>see</I> Domain Name System (DNS)</XREF></H0>
<H0>DNS spoofing, <PAGE>426</PAGE></H0>
<H0>Documentation</H0>
<H1>embedded, <PAGE><I>301</I></PAGE></H1>
<H1>working code, <PAGE><I>299</I></PAGE></H1>
<H0>Document Object Model (DOM)</H0>
<H1>dynamic HTML, <PAGE><I>180</I></PAGE></H1>
<H1>JavaScript, <PAGE><B>177</B></PAGE></H1>
<H1>JavaScript event handlers, <PAGE>180</PAGE></H1>
<H1>jQuery, <PAGE><I>200</I></PAGE></H1>
<H1>jQuery example, <PAGE><I>182</I></PAGE></H1>
<H1>manipulation with jQuery, <PAGE><I>178,</I> <I>179</I></PAGE></H1>
<H1>Rotten Potatoes, <PAGE><I>177</I></PAGE></H1>
<H1>use of term, <PAGE><I>177</I></PAGE></H1>
<H0>DOM, <XREF><I>see</I> Document Object Model (DOM)</XREF></H0>
<H0>Domain language, Cucumber, <PAGE>236</PAGE></H0>
<H0>Domain Name System (DNS)</H0>
<H1>hostname mapping, <PAGE>44</PAGE></H1>
<H1>root zone, <PAGE><I>45</I></PAGE></H1>
<H0>Domain-specific language (DSL)</H0>
<H1>domain language difference, <PAGE>236</PAGE></H1>
<H1>RSpec, <PAGE>259</PAGE></H1>
<H0>Don't Repeat Yourself (DRY)</H0>
<H1>factory, <PAGE>270</PAGE></H1>
<H1>JavaScript, <PAGE><I>167</I></PAGE></H1>
<H1>JavaScript custom events, <PAGE><I>185</I></PAGE></H1>
<H1>metaprogramming, <PAGE>81</PAGE></H1>
<H1>MVC, <PAGE><B>136</B></PAGE></H1>
<H1>Rails app example, <PAGE>104</PAGE></H1>
<H1>reuse, <PAGE>17</PAGE></H1>
<H1>Ruby's metaprogramming features, <PAGE>70</PAGE></H1>
<H1>search_tmdb, <PAGE><I>268</I></PAGE></H1>
<H1>similar things, <PAGE><I>126</I></PAGE></H1>
<H1>TMDb controller example, <PAGE><I>267</I></PAGE></H1>
<H1>TMDb example, <PAGE><I>235</I></PAGE></H1>
<H0>Double, <PAGE><B>261,</B> <I>263</I></PAGE></H0>
<H0>down method, Rails app example, <PAGE>105</PAGE></H0>
<H0>Down-migration, <PAGE>402</PAGE></H0>
<H0>Driver, pair programming, <PAGE>334</PAGE></H0>
<H0>DRY, <XREF><I>see</I> Don't Repeat Yourself (DRY)</XREF></H0>
<H0>DSL, <XREF><I>see</I> Domain-specific language (DSL)</XREF></H0>
<H0>Duck typing</H0>
<H1>abstract factory pattern, <PAGE><I>372</I></PAGE></H1>
<H1>composition/delegation, <PAGE>378</PAGE></H1>
<H1>design pattern expression, <PAGE><I>385</I></PAGE></H1>
<H1>each method, <PAGE><I>85</I></PAGE></H1>
<H1>overview, <PAGE><B>88</B></PAGE></H1>
<H1>Time class, <PAGE><I>89</I></PAGE></H1>
<H0>DU coverage, <XREF><I>see</I> Define&ndash;use (DU) coverage</XREF></H0>
<H0>Dumb fuzzing, <PAGE>285</PAGE></H0>
<H0>Dynabook, <PAGE><I>432</I></PAGE></H0>
<H0>Dynamic HTML, <PAGE><I>180</I></PAGE></H0>
<H0>Dynamic language features</H0>
<H1>pitfalls, <PAGE><I>83</I></PAGE></H1>
<H1>readable specs, <PAGE><I>271</I></PAGE></H1>
<H1>SOLID, <PAGE>387</PAGE></H1>
<H0>Dynamic typing</H0>
<H1>Lisp, <PAGE><I>88</I></PAGE></H1>
<H1>reuse, <PAGE>17</PAGE></H1>
<H1>Ruby objects, <PAGE>73</PAGE></H1>
</GROUP>
<GROUP><B>E</B>
<H0>each method</H0>
<H1>Array class, <PAGE>88</PAGE></H1>
<H1>definition, <PAGE>84</PAGE></H1>
<H1>duck typing, <PAGE><I>85</I></PAGE></H1>
<H1>iterator definition, <PAGE>89</PAGE></H1>
<H0>Eager load query, <PAGE><I>412</I></PAGE></H0>
<H0>eBay</H0>
<H1>Agile lifecycle, <PAGE>27</PAGE></H1>
<H1>software education, <PAGE>xiv</PAGE></H1>
<H0>EC2, <XREF><I>see</I> Amazon Elastic Compute Cloud (EC2)</XREF></H0>
<H0>ECMAScript, <PAGE><I>166</I></PAGE></H0>
<H0>Edit</H0>
<H1>partial, <PAGE><I>136</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>125,</B> <I>126</I></PAGE></H1>
<H0>EDSAC, Turing Award, <PAGE><I>2</I></PAGE></H0>
<H0>Eich, Brendan, <PAGE><I>166</I></PAGE></H0>
<H0>Elaboration phase, RUP, <PAGE>21</PAGE></H0>
<H0>Emacs</H0>
<H1>creation, <PAGE><I>444</I></PAGE></H1>
<H1>mix-ins, <PAGE><I>88</I></PAGE></H1>
<H1>working with code, <PAGE>445</PAGE></H1>
<H0>Embedded documentation, RDoc, <PAGE><I>301</I></PAGE></H0>
<H0>Embedded domain-specific language, RSpec, <PAGE>259</PAGE></H0>
<H0>Encapsulate Field, refactoring, <PAGE><I>319</I></PAGE></H0>
<H0>Encapsulation, Ruby <I>vs.</I> Java, <PAGE>79</PAGE></H0>
<H0>Encryption, data protection, <PAGE>414</PAGE></H0>
<H0>Engineering disciplines, <PAGE>21</PAGE></H0>
<H0>Entry/Exit coverage (S1), <PAGE>282</PAGE></H0>
<H0>Enumerable</H0>
<H1>collection methods, <PAGE>88</PAGE></H1>
<H1>Rails app example, <PAGE>108</PAGE></H1>
<H1>yield example, <PAGE><I>90</I></PAGE></H1>
<H0>Environments, Rails basics, <PAGE>104, <I>106</I></PAGE></H0>
<H0>Epic, Pivotal Tracker, <PAGE>221</PAGE></H0>
<H0>Epoch, <PAGE><I>82</I></PAGE></H0>
<H0>eRB renderer, <PAGE><I>417</I></PAGE></H0>
<H0>Error checking, associations, <PAGE>160</PAGE></H0>
<H0>errors method, validation, <PAGE>137, <I>139</I></PAGE></H0>
<H0>Eudora, <PAGE>42</PAGE></H0>
<H0>Event-driven programming, <PAGE><I>190</I></PAGE></H0>
<H0>Event handlers, JavaScript, <PAGE>180</PAGE></H0>
<H0>Events</H0>
<H1>JavaScript, <PAGE><B>180</B></PAGE></H1>
<H1>JavaScript custom events, <PAGE><I>185</I></PAGE></H1>
<H0>Examples</H0>
<H1>completion, <PAGE><I>263</I></PAGE></H1>
<H1>RSpec, <PAGE>260, <I>262</I></PAGE></H1>
<H1>sample code, <PAGE><I>266</I></PAGE></H1>
<H1>TMDb controller, <PAGE><I>267</I></PAGE></H1>
<H0>Exceptions</H0>
<H1>declared <I>vs.</I> undeclared, <PAGE><I>275</I></PAGE></H1>
<H1>TMDb, <PAGE><I>274,</I> <I>275,</I> <I>277,</I> <I>278</I></PAGE></H1>
<H0>Expectations, <PAGE><B>265</B></PAGE></H0>
<H1>careless use of, <PAGE>247</PAGE></H1>
<H1>RSpec, <PAGE><I>281</I></PAGE></H1>
<H0>Expiration</H0>
<H1>bugs, <PAGE>423</PAGE></H1>
<H1>caching, <PAGE>407</PAGE></H1>
<H0>EXPLAIN, SQL, <PAGE><I>414</I></PAGE></H0>
<H0>Explicit requirement</H0>
<H1>testing, <PAGE><B>236</B></PAGE></H1>
<H1>TMDb, <PAGE>273</PAGE></H1>
<H0>eXtended HyperText Markup Language (XHTML)</H0>
<H1>HTML 5, <PAGE>48</PAGE></H1>
<H1>JavaScript DOM, <PAGE>177</PAGE></H1>
<H0>eXtensible Markup Language (XML)</H0>
<H1>AJAX, <PAGE><I>168</I></PAGE></H1>
<H1>HTML 5, <PAGE>48</PAGE></H1>
<H1>JavaScript DOM, <PAGE>177</PAGE></H1>
<H1>SPAs, <PAGE>166, 199</PAGE></H1>
<H1>structured data, <PAGE><I>173</I></PAGE></H1>
<H1>stubbing, <PAGE><I>202</I></PAGE></H1>
<H1>Transform View, <PAGE><I>64</I></PAGE></H1>
<H0>External domain-specific language, <PAGE>259</PAGE></H0>
<H0>External monitoring, <PAGE>406</PAGE></H0>
<H0>Extract Class, refactoring, <PAGE>370</PAGE></H0>
<H0>Extract Method</H0>
<H1>application, <PAGE>316</PAGE></H1>
<H1>example, <PAGE><I>316,</I> <I>317</I></PAGE></H1>
<H1>refactoring, <PAGE>314, <I>315</I></PAGE></H1>
<H0>Extreme Programming (XP)</H0>
<H1>Agile variants, <PAGE><I>25</I></PAGE></H1>
<H1>pair programming, <PAGE>333</PAGE></H1>
</GROUP>
<GROUP><B>F</B>
<H0>Fa&ccedil;ade pattern, DIP, <PAGE>379, <I>381</I></PAGE></H0>
<H0>Facebook</H0>
<H1>Agile lifecycle, <PAGE>27</PAGE></H1>
<H1>database use, <PAGE><I>53</I></PAGE></H1>
<H1>has_and_belongs_to_many, <PAGE><I>154</I></PAGE></H1>
<H1>hits per day, <PAGE>422</PAGE></H1>
<H1>household name, <PAGE>4</PAGE></H1>
<H1>OAuth, <PAGE><I>142</I></PAGE></H1>
<H1>OmniAuth, <PAGE>145</PAGE></H1>
<H1>pair programming, <PAGE>335</PAGE></H1>
<H1>SMART user stories, <PAGE>219</PAGE></H1>
<H1>software education, <PAGE>xiv</PAGE></H1>
<H1>SSO, <PAGE><I>142</I></PAGE></H1>
<H0>Facebook Connect</H0>
<H1>authentication, <PAGE>395</PAGE></H1>
<H1>SSO side effects, <PAGE><I>146</I></PAGE></H1>
<H0>Facebook Platform, SOA, <PAGE>7</PAGE></H0>
<H0>Factories</H0>
<H1>example, <PAGE><I>271</I></PAGE></H1>
<H1>fixture comparison, <PAGE><I>198</I></PAGE></H1>
<H1>initialize, <PAGE>388</PAGE></H1>
<H1>TMDb, <PAGE><B>269</B></PAGE></H1>
<H0>FactoryGirl, <PAGE>270, <I>271</I></PAGE></H0>
<H0>failure handler function, <PAGE><I>202</I></PAGE></H0>
<H0>fake_results, TMDb, <PAGE>266</PAGE></H0>
<H0>FakeWeb, <PAGE><I>202,</I> 278</PAGE></H0>
<H0>Fallacy, <PAGE>32</PAGE></H0>
<H0>false, Ruby regular expressions, <PAGE>72</PAGE></H0>
<H0>FarmVille, growth, <PAGE><I>12</I></PAGE></H0>
<H0>Feature</H0>
<H1>cool, successfulness, <PAGE>246</PAGE></H1>
<H1>Cucumber, <PAGE>224</PAGE></H1>
<H1>mock-up distinction, <PAGE>246</PAGE></H1>
<H0>Feature branch, <PAGE>340</PAGE></H0>
<H0>Feature envy, <PAGE>383</PAGE></H0>
<H0>Feature flags</H0>
<H1>deployment, <PAGE><B>400</B></PAGE></H1>
<H1>example, <PAGE><I>401</I></PAGE></H1>
<H1>uses, <PAGE><I>403</I></PAGE></H1>
<H0>Fibonacci scale, <PAGE><I>220</I></PAGE></H0>
<H0>Fielding, Roy, <PAGE>59</PAGE></H0>
<H0>Fields, active records, <PAGE>57</PAGE></H0>
<H0>Filters</H0>
<H1>definition, <PAGE>139</PAGE></H1>
<H1>pitfalls, <PAGE>159</PAGE></H1>
<H1>scopes, <PAGE><I>158</I></PAGE></H1>
<H0>find-based methods, Rails app example, <PAGE>108</PAGE></H0>
<H0>find_in_tmdb</H0>
<H1>exception, <PAGE><I>274</I></PAGE></H1>
<H1>functional tests, <PAGE>284</PAGE></H1>
<H1>Internet stub, <PAGE>276</PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>263, 267</PAGE></H1>
<H1>stubbing, <PAGE><I>202</I></PAGE></H1>
<H1>TDD, <PAGE>272</PAGE></H1>
<H1>usage, <PAGE><I>267</I></PAGE></H1>
<H0>Firebug, <PAGE><I>174</I></PAGE></H0>
<H0>Firefox, client-server architecture, <PAGE>42</PAGE></H0>
<H0>Firewalls, secure platform fallacy, <PAGE>423</PAGE></H0>
<H0>FIRST, <PAGE><B>258</B></PAGE></H0>
<H0>First-class objects, JavaScript, <PAGE>174, <I>175</I></PAGE></H0>
<H0>Five nines, <PAGE><I>11</I></PAGE></H0>
<H0>Fixnum class</H0>
<H1>metaprogramming, <PAGE>81</PAGE></H1>
<H1>Ruby objects, <PAGE>73</PAGE></H1>
<H1>time arithmetic, <PAGE><I>82</I></PAGE></H1>
<H0>Fixtures, <PAGE><B>269</B></PAGE></H0>
<H1>example, <PAGE><I>194</I></PAGE></H1>
<H1>factory comparison, <PAGE><I>198</I></PAGE></H1>
<H1>HTML example, <PAGE><I>195</I></PAGE></H1>
<H1>Jasmine-jQuery, <PAGE><I>201</I></PAGE></H1>
<H1>legacy code exploration, <PAGE><I>302</I></PAGE></H1>
<H1>YAML files, <PAGE><I>270</I></PAGE></H1>
<H0>Flash</H0>
<H1>CSS, <PAGE><I>124</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>122</B></PAGE></H1>
<H1>XSS security issues, <PAGE><I>417</I></PAGE></H1>
<H0>Flickr, branch management, <PAGE><I>340</I></PAGE></H0>
<H0>Float class, Ruby objects, <PAGE>73</PAGE></H0>
<H0>force_ssl, <PAGE>415</PAGE></H0>
<H0>Foreign keys, <PAGE><B>147</B></PAGE></H0>
<H1>abusive database queries, <PAGE>413</PAGE></H1>
<H1>example, <PAGE><I>149</I></PAGE></H1>
<H0>Fork-and-pull, remote collaboration, <PAGE><I>339</I></PAGE></H0>
<H0>Formal methods</H0>
<H1>definition, <PAGE>287</PAGE></H1>
<H1>NASA cost example, <PAGE><I>287</I></PAGE></H1>
<H1>testing alternatives, <PAGE>14</PAGE></H1>
<H0>Formal specification languages, requirements documentation, <PAGE><I>241</I></PAGE></H0>
<H0>:format, <PAGE><I>62</I></PAGE></H0>
<H0>Formatter class</H0>
<H1>design patterns, <PAGE><I>374</I></PAGE></H1>
<H1>example, <PAGE><I>372</I></PAGE></H1>
<H1>OCP, <PAGE>371</PAGE></H1>
<H0>Form submission</H0>
<H1>authentication, <PAGE>146</PAGE></H1>
<H1>Rails app example, <PAGE><B>120,</B> <I>121</I></PAGE></H1>
<H0>Form validation, client-side, testing, <PAGE><I>197</I></PAGE></H0>
<H0>Forward traceability, <PAGE>244</PAGE></H0>
<H0>Fragment caching, <PAGE>410</PAGE></H0>
<H0>Framework concepts</H0>
<H1>JavaScript</H1>
<H2>AJAX, <PAGE><B>185</B></PAGE></H2>
<H2>client-side, <PAGE><B>169</B></PAGE></H2>
<H2>DOM and jQuery, <PAGE><B>177</B></PAGE></H2>
<H2>events and callbacks, <PAGE><B>180</B></PAGE></H2>
<H2>functions and constructors, <PAGE><B>174</B></PAGE></H2>
<H2>overview, <PAGE><B>166,</B> <B>206</B></PAGE></H2>
<H2>single-page apps and JSON APIs, <PAGE><B>198</B></PAGE></H2>
<H2>testing, <PAGE><B>190</B></PAGE></H2>
<H1>Rails, advanced</H1>
<H2>associations and foreign keys, <PAGE><B>147</B></PAGE></H2>
<H2>MVC DRYness, <PAGE><B>136</B></PAGE></H2>
<H2>queries with reusable scopes, <PAGE><B>157</B></PAGE></H2>
<H2>RESTful routes for associations, <PAGE><B>154</B></PAGE></H2>
<H2>SSO and third-party authentication, <PAGE><B>142</B></PAGE></H2>
<H2>through-associations, <PAGE><B>152</B></PAGE></H2>
<H1>Rails basics, <XREF><I>see also</I> Ruby on Rails basics</XREF></H1>
<H2>controllers and views, <PAGE><B>111</B></PAGE></H2>
<H2>databases and migrations, <PAGE><B>104</B></PAGE></H2>
<H2>debugging, <PAGE><B>117</B></PAGE></H2>
<H2>edit/update and destroy, <PAGE><B>125</B></PAGE></H2>
<H2>form submission, <PAGE><B>120</B></PAGE></H2>
<H2>models, <PAGE><B>107</B></PAGE></H2>
<H2>overview, <PAGE><B>100</B></PAGE></H2>
<H2>redirection and flash, <PAGE><B>122</B></PAGE></H2>
<H1>Ruby basics</H1>
<H2>blocks, <PAGE><B>84</B></PAGE></H2>
<H2>classes, methods, inheritance, <PAGE><B>78</B></PAGE></H2>
<H2>idiomatic language, <PAGE><B>93</B></PAGE></H2>
<H2>iterators via yield, <PAGE><B>89</B></PAGE></H2>
<H2>metaprogramming, <PAGE><B>81</B></PAGE></H2>
<H2>mix-ins and duck typing, <PAGE><B>88</B></PAGE></H2>
<H2>objects, <PAGE><B>73</B></PAGE></H2>
<H2>operation as method, <PAGE><B>75</B></PAGE></H2>
<H2>overview, <PAGE><B>70</B></PAGE></H2>
<H0>Free Software Foundation, <PAGE><I>444,</I> 445</PAGE></H0>
<H0>Front Controller</H0>
<H1>MVC, <PAGE>55</PAGE></H1>
<H1>web app comparison, <PAGE><I>55</I></PAGE></H1>
<H0>full_messages, validation, <PAGE>137</PAGE></H0>
<H0>Full table scan, <PAGE>412</PAGE></H0>
<H0>Full URI, <PAGE><I>45</I></PAGE></H0>
<H0>Function, definition, <PAGE><I>256</I></PAGE></H0>
<H0>Functional programming, Ruby blocks, <PAGE>85</PAGE></H0>
<H0>Functional requirements, elicitation, <PAGE>239</PAGE></H0>
<H0>Functional tests</H0>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>characterization tests, <PAGE>306</PAGE></H1>
<H1>definition, <PAGE>283</PAGE></H1>
<H1>testing method comparison, <PAGE><I>284</I></PAGE></H1>
<H0>Function points, <PAGE><I>242</I></PAGE></H0>
<H0>Functions, JavaScript, <PAGE><B>174</B></PAGE></H0>
<H0>Function scope, JavaScript, <PAGE>205</PAGE></H0>
<H0>Fuzz testing</H0>
<H1>definition, <PAGE>285</PAGE></H1>
<H1>software, <PAGE>15</PAGE></H1>
</GROUP>
<GROUP><B>G</B>
<H0>Garrett, Jesse James, <PAGE>168</PAGE></H0>
<H0>Gemfile, <PAGE>190, 454</PAGE></H0>
<H0>gem mysql, <PAGE><I>451</I></PAGE></H0>
<H0>Gems</H0>
<H1>manual modification, <PAGE>129</PAGE></H1>
<H1>Rails basics, <PAGE>100, <I>257</I></PAGE></H1>
<H1>Ruby, <PAGE><B>256</B></PAGE></H1>
<H0>Generalize Type, refactoring, <PAGE><I>319</I></PAGE></H0>
<H0>General Markup Language, <PAGE><I>48</I></PAGE></H0>
<H0>Generator, Rails app example, <PAGE>105</PAGE></H0>
<H0>GenericMailer, DIP, <PAGE><I>381</I></PAGE></H0>
<H0>Geographically distributed programming teams, Agile <I>vs.</I> plan-and-document, <PAGE>26</PAGE></H0>
<H0>get</H0>
<H1>functional tests, <PAGE>283</PAGE></H1>
<H1>TMDb, <PAGE>265</PAGE></H1>
<H0>GET, POST comparison, <PAGE><I>128</I></PAGE></H0>
<H0>Getter method, Ruby objects, <PAGE>79</PAGE></H0>
<H0>Git</H0>
<H1>add, commit, index commands, <PAGE><I>447</I></PAGE></H1>
<H1>basic skills, <PAGE><B>446</B></PAGE></H1>
<H1>branch commands, <PAGE><I>342</I></PAGE></H1>
<H1>branches and rebasing, <PAGE><I>343</I></PAGE></H1>
<H1>branch use, <PAGE><I>341</I></PAGE></H1>
<H1>change tracking, <PAGE><I>338</I></PAGE></H1>
<H1>commit commands, <PAGE><I>338</I></PAGE></H1>
<H1>common commands, <PAGE><I>450</I></PAGE></H1>
<H1>hosting services, <PAGE>447</PAGE></H1>
<H1>merge commands, <PAGE><I>338</I></PAGE></H1>
<H1>merging conflicts, <PAGE><I>336</I></PAGE></H1>
<H0>git fetch, <PAGE><I>337</I></PAGE></H0>
<H0>GitFlow, branch management, <PAGE><I>340</I></PAGE></H0>
<H0>GitHub</H0>
<H1>basic skills, <PAGE><B>447</B></PAGE></H1>
<H1>bookware, <PAGE>442</PAGE></H1>
<H1>bug testing, <PAGE>344</PAGE></H1>
<H1>code reviews, <PAGE>335</PAGE></H1>
<H1>continuous integration, <PAGE>399</PAGE></H1>
<H1>coursework backup, <PAGE>445</PAGE></H1>
<H1>information sharing, <PAGE>222</PAGE></H1>
<H1>remote collaboration, <PAGE><I>339</I></PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>git merge, <PAGE><I>337</I></PAGE></H0>
<H0>git pull, <PAGE><I>337</I></PAGE></H0>
<H0>Given, Cucumber keyword, <PAGE>224</PAGE></H0>
<H0>Glass-box tests, <PAGE>14, 285</PAGE></H0>
<H0>Globally-unique ID (guid), <PAGE>143</PAGE></H0>
<H0>Global object, JavaScript, <PAGE>174</PAGE></H0>
<H0>GNU, <PAGE>443, <I>444</I></PAGE></H0>
<H0>GoF design patterns, <PAGE>363, <I>364</I></PAGE></H0>
<H0>Google</H0>
<H1>Agile lifecycle, <PAGE>27</PAGE></H1>
<H1>code reviews, <PAGE>422</PAGE></H1>
<H1>coding standards, <PAGE><I>333</I></PAGE></H1>
<H1>Dapper, <PAGE>425</PAGE></H1>
<H1>error message searches, <PAGE>118, 442</PAGE></H1>
<H1>household name, <PAGE>4</PAGE></H1>
<H1>importance of testing, <PAGE><I>249</I></PAGE></H1>
<H1>JavaScript engines, <PAGE>207</PAGE></H1>
<H1>OAuth, <PAGE><I>142</I></PAGE></H1>
<H1>responsiveness, <PAGE><I>397</I></PAGE></H1>
<H1>software education, <PAGE>xiv</PAGE></H1>
<H1>testing variety, <PAGE>290</PAGE></H1>
<H0>Google+, siloed software, <PAGE>7</PAGE></H0>
<H0>Google Analytics, <PAGE>425</PAGE></H0>
<H0>Google AppEngine, <PAGE>51</PAGE></H0>
<H1>cloud computing, <PAGE>12</PAGE></H1>
<H1>DataMapper, <PAGE><I>150,</I> <I>151</I></PAGE></H1>
<H0>Google Apps</H0>
<H1>availability, <PAGE>404</PAGE></H1>
<H1>OmniAuth, <PAGE>145</PAGE></H1>
<H0>Google Closure, <PAGE>207</PAGE></H0>
<H0>Google Docs</H0>
<H1>client-server architecture, <PAGE>43</PAGE></H1>
<H1>information sharing, <PAGE>222</PAGE></H1>
<H1>JavaScript, <PAGE>166, 207</PAGE></H1>
<H0>Google Maps</H0>
<H1>AJAX, <PAGE>168</PAGE></H1>
<H1>client-side SPAs, <PAGE>198</PAGE></H1>
<H1>XmlHttpRequest, <PAGE>185</PAGE></H1>
<H0><I>Go To Statement Considered Harmful</I> (Dijkstra), <PAGE><I>160</I></PAGE></H0>
<H0>Graceful degradation, JavaScript, <PAGE>166</PAGE></H0>
<H0>Gray, Jim, <PAGE><I>68</I></PAGE></H0>
<H0>Group, Rails basics, <PAGE>100</PAGE></H0>
<H0>Guest operating system, <PAGE>443</PAGE></H0>
<H0>guid, <XREF><I>see</I> Globally-unique ID (guid)</XREF></H0>
</GROUP>
<GROUP><B>H</B>
<H0>HABTM, <XREF><I>see</I> has_and_belongs_to_many (HABTM)</XREF></H0>
<H0>Haml, <XREF><I>see</I> HTML Abstraction Markup Language (Haml)</XREF></H0>
<H0>Hardening, continuous integration, <PAGE>399</PAGE></H0>
<H0>has_and_belongs_to_many (HABTM), <PAGE><I>154</I></PAGE></H0>
<H0>Hash class, Ruby objects, <PAGE>73</PAGE></H0>
<H0>Hashing, abusive database queries, <PAGE>413</PAGE></H0>
<H0>has_many</H0>
<H1>example, <PAGE><I>150</I></PAGE></H1>
<H1>function, <PAGE><I>149</I></PAGE></H1>
<H1>through-associations, <PAGE>152</PAGE></H1>
<H0>has_one, function, <PAGE><I>149</I></PAGE></H0>
<H0>HCI, <XREF><I>see</I> Human Computer Interface (HCI)</XREF></H0>
<H0>HEAD, web browsers, <PAGE><I>60</I></PAGE></H0>
<H0>Heavyweight processes, <PAGE><I>21</I></PAGE></H0>
<H0>Heroku</H0>
<H1>abusive database queries, <PAGE>411</PAGE></H1>
<H1>bookware, <PAGE>442</PAGE></H1>
<H1>caching, <PAGE><I>411</I></PAGE></H1>
<H1>cloud deployment, <PAGE><B>451</B></PAGE></H1>
<H1>deployment automation, <PAGE>398</PAGE></H1>
<H1>indexing, <PAGE><I>413</I></PAGE></H1>
<H1>PaaS, <PAGE>395</PAGE></H1>
<H1>Progstr-Filer addon, <PAGE>417</PAGE></H1>
<H0>Hidden form fields, authentication, <PAGE>146</PAGE></H0>
<H0>Higher-level programming languages, clarity improvement, <PAGE>16</PAGE></H0>
<H0>Highly Productive Framework and Tools, Virtuous Triangle of Engineering SaaS, <PAGE><I>33,</I> <I>433</I></PAGE></H0>
<H0>HiJax, <PAGE><I>186</I></PAGE></H0>
<H0>Hoare, Charles Antony Richard, <PAGE><I>98</I></PAGE></H0>
<H0>Hopper, Grace Murray, <PAGE><I>4</I></PAGE></H0>
<H0>Horizontal scaling, <PAGE><B>51,</B> 65</PAGE></H0>
<H0>Hostnames</H0>
<H1>mapping by DNS, <PAGE>44</PAGE></H1>
<H1>URI, <PAGE>45</PAGE></H1>
<H0>Host operating system, <PAGE>443</PAGE></H0>
<H0>HTML, <XREF><I>see</I> HyperText Markup Language (HTML)</XREF></H0>
<H0>HTML Abstraction Markup Language (Haml)</H0>
<H1>before-filters for &quot;owning,&quot; <PAGE><I>156</I></PAGE></H1>
<H1>caching, <PAGE>407</PAGE></H1>
<H1>CoffeeScript, <PAGE><I>208</I></PAGE></H1>
<H1>common constructs, <PAGE><I>63</I></PAGE></H1>
<H1>debugging, <PAGE>119</PAGE></H1>
<H1>edit <I>vs.</I> new views, <PAGE><I>126</I></PAGE></H1>
<H1>flash message, <PAGE><I>124</I></PAGE></H1>
<H1>Lo-Fi UI, <PAGE>230</PAGE></H1>
<H1>Rails app example, <PAGE>102, <I>113</I></PAGE></H1>
<H1>sanitization, <PAGE><I>112</I></PAGE></H1>
<H1>template views, <PAGE>62, <I>63</I></PAGE></H1>
<H1>TMDb code, <PAGE><I>233</I></PAGE></H1>
<H0>HTTP, <XREF><I>see</I> HyperText Transfer Protocol (HTTP)</XREF></H0>
<H0>httperf, <PAGE>406</PAGE></H0>
<H0>HTTP method</H0>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H1>request, <PAGE><I>45</I></PAGE></H1>
<H1>route helpers, <PAGE><I>113</I></PAGE></H1>
<H1>routes, <PAGE><I>60</I></PAGE></H1>
<H0>HTTP redirect, Rails basics, <PAGE>103</PAGE></H0>
<H0>HTTP request</H0>
<H1>example, <PAGE><I>45</I></PAGE></H1>
<H1>Rack, <PAGE>373</PAGE></H1>
<H1>stateless protocol, <PAGE>46</PAGE></H1>
<H0>HTTPS, <XREF><I>see</I> Secure HTTP protocol (HTTPS)</XREF></H0>
<H0>HTTP server, three-tier architecture, <PAGE>51</PAGE></H0>
<H0>HTTP verb, <PAGE>59</PAGE></H0>
<H0>Human Computer Interface (HCI), <PAGE>217</PAGE></H0>
<H0>HyperText Markup Language (HTML)</H0>
<H1>client-side JavaScript, <PAGE>171</PAGE></H1>
<H1>delete action, <PAGE>127</PAGE></H1>
<H1>development, <PAGE><I>66</I></PAGE></H1>
<H1>dynamic HTML, <PAGE><I>180</I></PAGE></H1>
<H1>fixture example, <PAGE><I>195</I></PAGE></H1>
<H1>Haml constructs, <PAGE><I>63</I></PAGE></H1>
<H1>HTML 5 client pull <I>vs.</I> server push, <PAGE><I>47</I></PAGE></H1>
<H1>HTML 5 features, <PAGE>48</PAGE></H1>
<H1>introduction, <PAGE><I>48</I></PAGE></H1>
<H1>Jasmine-jQuery sandbox method, <PAGE><I>197</I></PAGE></H1>
<H1>JavaScript DOM, <PAGE>177</PAGE></H1>
<H1>JSON response, <PAGE><I>200</I></PAGE></H1>
<H1>overview, <PAGE><B>48</B></PAGE></H1>
<H1>security vulnerabilities, <PAGE><I>417</I></PAGE></H1>
<H1>SPAs, <PAGE>198</PAGE></H1>
<H1>stubbing, <PAGE><I>202</I></PAGE></H1>
<H1>sync with app, <PAGE>204</PAGE></H1>
<H1>yield, <PAGE>92</PAGE></H1>
<H0>HyperText Transfer Protocol (HTTP)</H0>
<H1>bookware VM on EC2, <PAGE>444</PAGE></H1>
<H1>client pull <I>vs.</I> server push, <PAGE><I>47</I></PAGE></H1>
<H1>communication, <PAGE>44</PAGE></H1>
<H1>development, <PAGE><I>66</I></PAGE></H1>
<H1>request example, <PAGE><I>45</I></PAGE></H1>
<H1>stateless protocol, <PAGE>46</PAGE></H1>
<H1>three-tier architecture, <PAGE><I>52</I></PAGE></H1>
<H0>Hypervisor, <PAGE>443</PAGE></H0>
</GROUP>
<GROUP><B>I</B>
<H0>IANA, <XREF><I>see</I> Internet Assigned Numbers Authority (IANA)</XREF></H0>
<H0>IDEs, <XREF><I>see</I> Integrated Development Environments (IDEs)</XREF></H0>
<H0>IEEE 828-2012, <PAGE><I>352</I></PAGE></H0>
<H0>IEEE 1012-2012, <PAGE><I>350</I></PAGE></H0>
<H0>IEEE 1219-1998, <PAGE><I>321</I></PAGE></H0>
<H0>IEEE 16326-2009, <PAGE><I>346</I></PAGE></H0>
<H0>IEEE/ANSI standard 830/1993, <PAGE>23</PAGE></H0>
<H0>IEEE Standard 829-2008, <PAGE>287, <I>288</I></PAGE></H0>
<H0>IEEE Standard 830-1998, <PAGE>239, <I>240</I></PAGE></H0>
<H0>Immobility, SOLID, <PAGE>365</PAGE></H0>
<H0>Imperative scenarios, <PAGE><B>236</B></PAGE></H0>
<H0>Implicit requirement, <PAGE><B>236,</B> <B>272</B></PAGE></H0>
<H0>Inappropriate intimacy, Demeter violations, <PAGE>382</PAGE></H0>
<H0>Inception, RUP phase, <PAGE>21</PAGE></H0>
<H0>include</H0>
<H1>confusion with require, <PAGE>93</PAGE></H1>
<H1>module contract checking, <PAGE><I>88</I></PAGE></H1>
<H0>Independence</H0>
<H1>factories, <PAGE><I>271</I></PAGE></H1>
<H1>fixtures, <PAGE>270</PAGE></H1>
<H0>Index, Git basics, <PAGE><I>447</I></PAGE></H0>
<H0>Index action</H0>
<H1>controller and template, <PAGE><I>112</I></PAGE></H1>
<H1>Rails app example, <PAGE>111</PAGE></H1>
<H1>redirection, <PAGE>123</PAGE></H1>
<H0>Index controller, template views, <PAGE>62</PAGE></H0>
<H0>Indexing, Heroku, <PAGE><I>413</I></PAGE></H0>
<H0>Infinitely scalable, <PAGE>11</PAGE></H0>
<H0>Inheritance</H0>
<H1>composition/delegation preference, <PAGE><I>377</I></PAGE></H1>
<H1>design patterns, <PAGE><I>374</I></PAGE></H1>
<H1>Ruby, <PAGE><B>78</B></PAGE></H1>
<H0>initialize</H0>
<H1>classes, <PAGE>78</PAGE></H1>
<H1>factory patterns, <PAGE>388</PAGE></H1>
<H0>Inspections, plan-and-document, <PAGE>348</PAGE></H0>
<H0>Instance variables, <PAGE>78, <I>369</I></PAGE></H0>
<H0>Instrumentation, debugging, <PAGE>119</PAGE></H0>
<H0>Integrated Development Environments (IDEs), <PAGE>445</PAGE></H0>
<H0>Integration testing</H0>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>characterization tests, <PAGE>306</PAGE></H1>
<H1>Cucumber, <PAGE>224</PAGE></H1>
<H1>explicit <I>vs.</I> implicit requirements, <PAGE>236</PAGE></H1>
<H1>RSpec <I>vs.</I> Cucumber, <PAGE><I>259</I></PAGE></H1>
<H1>software, <PAGE>14</PAGE></H1>
<H1>testing method comparison, <PAGE><I>284</I></PAGE></H1>
<H1>types, <PAGE>286</PAGE></H1>
<H1>unit test comparison, <PAGE><B>282</B></PAGE></H1>
<H0>Interaction diagrams, UML, <PAGE><I>367</I></PAGE></H0>
<H0>Interface Segregation Principle (ISP), <PAGE><I>371</I></PAGE></H0>
<H0>Internal domain-specific language, RSpec, <PAGE>259</PAGE></H0>
<H0>Internal monitoring, <PAGE>405</PAGE></H0>
<H0>Internet Assigned Numbers Authority (IANA), <PAGE><I>45</I></PAGE></H0>
<H0>Internet Explorer 5</H0>
<H1>JavaScript, <PAGE>168</PAGE></H1>
<H1>XmlHttpRequest, <PAGE>185</PAGE></H1>
<H0>Internet Service Provider (ISP), deployment, <PAGE>394</PAGE></H0>
<H0>Interpolation, template views, <PAGE>62, <I>63</I></PAGE></H0>
<H0>Interpreters, automation, <PAGE>17</PAGE></H0>
<H0>Interviewing, requirements elicitation, <PAGE>239</PAGE></H0>
<H0>IP address</H0>
<H1>networking explanation, <PAGE><I>45</I></PAGE></H1>
<H1>TCP/IP network, <PAGE>44</PAGE></H1>
<H0>IPv6, networking explanation, <PAGE><I>45</I></PAGE></H0>
<H0>ISO 9001 standard, <PAGE>420</PAGE></H0>
<H0>ISP, <XREF><I>see</I> Interface Segregation Principle (ISP); Internet Service Provider (ISP)</XREF></H0>
<H0>Iteration, Agile lifecycle, <PAGE>216, <I>216,</I> <I>436</I></PAGE></H0>
<H0>Iterators</H0>
<H1>Demeter Principle, <PAGE>384</PAGE></H1>
<H1>expression, <PAGE><I>385</I></PAGE></H1>
<H1>making with yield, <PAGE><B>89</B></PAGE></H1>
<H1>Ruby blocks, <PAGE>84</PAGE></H1>
</GROUP>
<GROUP><B>J</B>
<H0>Jacobson, Ivar, <PAGE><I>366</I></PAGE></H0>
<H0>Jasmine</H0>
<H1>AJAX testing, <PAGE>190, <I>195</I></PAGE></H1>
<H1>commonly used features, <PAGE><I>193</I></PAGE></H1>
<H1>directory creation, <PAGE><I>191</I></PAGE></H1>
<H1>setting up, <PAGE><I>191</I></PAGE></H1>
<H1>spies, <PAGE><I>194</I></PAGE></H1>
<H0>Jasmine-jQuery</H0>
<H1>commonly used features, <PAGE><I>193</I></PAGE></H1>
<H1>fixtures, <PAGE>200, <I>201</I></PAGE></H1>
<H1>sandbox method, <PAGE><I>197</I></PAGE></H1>
<H0>Jasmine-Rails, <PAGE><I>192</I></PAGE></H0>
<H0>Java</H0>
<H1>continuous integration, <PAGE><I>399</I></PAGE></H1>
<H1>exceptions, <PAGE><I>275</I></PAGE></H1>
<H1>JavaScript relationship, <PAGE>169</PAGE></H1>
<H0>JavaScript</H0>
<H1>AJAX, <PAGE><B>185</B></PAGE></H1>
<H1>basic constructs, <PAGE><I>170</I></PAGE></H1>
<H1>Capybara, <PAGE><I>225</I></PAGE></H1>
<H1>client-side, <PAGE><B>169</B></PAGE></H1>
<H1>deployment, <PAGE>399</PAGE></H1>
<H1>DOM and jQuery, <PAGE><B>177</B></PAGE></H1>
<H1>dynamic HTML, <PAGE><I>180</I></PAGE></H1>
<H1>ECMAScript, <PAGE><I>166</I></PAGE></H1>
<H1>events and callbacks, <PAGE><B>180</B></PAGE></H1>
<H1>functions and constructors, <PAGE><B>174</B></PAGE></H1>
<H1>issues with, <PAGE>205</PAGE></H1>
<H1>jQuery API, <PAGE><I>181</I></PAGE></H1>
<H1>over-reliance on, <PAGE>204</PAGE></H1>
<H1>overview, <PAGE><B>166,</B> <B>206</B></PAGE></H1>
<H1>partial, <PAGE><I>136</I></PAGE></H1>
<H1>production code failures, <PAGE>203</PAGE></H1>
<H1>prototype inheritance, <PAGE><I>176</I></PAGE></H1>
<H1>Rails app example, <PAGE><I>113</I></PAGE></H1>
<H1>same-origin policy, <PAGE><I>202</I></PAGE></H1>
<H1>Scheme origins, <PAGE><I>166</I></PAGE></H1>
<H1>silent failures, <PAGE>203</PAGE></H1>
<H1>site enhancement, <PAGE>203</PAGE></H1>
<H1>sync with app, <PAGE>204</PAGE></H1>
<H1>task parallelism, <PAGE><I>190</I></PAGE></H1>
<H1>testing, <PAGE><B>190</B></PAGE></H1>
<H1>this keyword use, <PAGE>204</PAGE></H1>
<H1>unobtrusive code, <PAGE><I>172</I></PAGE></H1>
<H1>XSS security issues, <PAGE><I>417</I></PAGE></H1>
<H0>JavaScript Application Programming Interface (JSAPI), <PAGE>168, 177, <I>196</I></PAGE></H0>
<H0>JavaScript engine, <PAGE>207</PAGE></H0>
<H0>JavaScript Object Notation (JSON), <PAGE>166, <B>198</B></PAGE></H0>
<H1>definition, <PAGE>169</PAGE></H1>
<H1>Jasmine-jQuery, fixtures, <PAGE><I>201</I></PAGE></H1>
<H1>response example, <PAGE><I>200</I></PAGE></H1>
<H1>structured data, <PAGE><I>173</I></PAGE></H1>
<H1>stubbing, <PAGE><I>202</I></PAGE></H1>
<H0>Java <I>vs.</I> Ruby</H0>
<H1>classes, <PAGE>79</PAGE></H1>
<H1>coding in Ruby, <PAGE>92</PAGE></H1>
<H1>Enumerable, <PAGE>88</PAGE></H1>
<H1>feature translation, <PAGE><I>80</I></PAGE></H1>
<H1>metaprogramming, <PAGE><B>81</B></PAGE></H1>
<H1>objects, <PAGE><B>73</B></PAGE></H1>
<H1>Ruby overview, <PAGE><B>70</B></PAGE></H1>
<H1>syntax errors, <PAGE>119</PAGE></H1>
<H1>type casting, <PAGE>75</PAGE></H1>
<H1>yield, <PAGE>90</PAGE></H1>
<H0>Join, foreign keys, <PAGE>147</PAGE></H0>
<H0>Join point, AOP, <PAGE><I>141</I></PAGE></H0>
<H0>Joy, Bill, <PAGE><I>445</I></PAGE></H0>
<H0>jQuery</H0>
<H1>Adapter, <PAGE><I>168</I></PAGE></H1>
<H1>API, <PAGE><I>181</I></PAGE></H1>
<H1>DOM manipulation, <PAGE><I>178,</I> <I>179</I></PAGE></H1>
<H1>example, <PAGE><I>182,</I> <I>188</I></PAGE></H1>
<H1>invoking, <PAGE><I>184</I></PAGE></H1>
<H1>Jasmine, <PAGE><I>191</I></PAGE></H1>
<H1>JavaScript event handlers, <PAGE>180</PAGE></H1>
<H1>JavaScript for Ruby programmers, <PAGE>171</PAGE></H1>
<H1>minifying, <PAGE><I>173</I></PAGE></H1>
<H1>overview, <PAGE><B>177</B></PAGE></H1>
<H0>jQuery Mobile, <PAGE>207</PAGE></H0>
<H0>JSAPI, <XREF><I>see</I> JavaScript Application Programming Interface (JSAPI)</XREF></H0>
<H0>JSLint, <PAGE>205</PAGE></H0>
<H0>JSON, <XREF><I>see</I> JavaScript Object Notation (JSON)</XREF></H0>
<H0>JSON.org, <PAGE><I>171</I></PAGE></H0>
</GROUP>
<GROUP><B>K</B>
<H0>Kahan, William, <PAGE><I>360</I></PAGE></H0>
<H0>Kahn, Bob, <PAGE><I>44</I></PAGE></H0>
<H0>Kay, Alan, <PAGE><I>432</I></PAGE></H0>
<H0>Keypair, <PAGE>415, <I>448</I></PAGE></H0>
<H0>Key Performance Indicators (KPIs), <PAGE>405</PAGE></H0>
<H0>Knuth, Donald, <PAGE><I>254</I></PAGE></H0>
<H0>KPIs, <XREF><I>see</I> Key Performance Indicators (KPIs)</XREF></H0>
</GROUP>
<GROUP><B>L</B>
<H0>Lack of Cohesion of Methods (LCOM), <PAGE>369, <I>369</I></PAGE></H0>
<H0>lambda, TMDb, <PAGE>274</PAGE></H0>
<H0>Lampson, Butler, <PAGE><I>296</I></PAGE></H0>
<H0>LAMP Stack, <PAGE><I>51</I></PAGE></H0>
<H0>Latency</H0>
<H1>added, effects, <PAGE><I>422</I></PAGE></H1>
<H1>monitoring, <PAGE>425</PAGE></H1>
<H1>overprovisioning, <PAGE>404</PAGE></H1>
<H1>responsiveness, <PAGE>396</PAGE></H1>
<H0>Law of Demeter, <PAGE>382</PAGE></H0>
<H0>Lazy evaluation</H0>
<H1>caching, <PAGE>410</PAGE></H1>
<H1>scopes, <PAGE>159</PAGE></H1>
<H0>LCOM, <XREF><I>see</I> Lack of Cohesion of Methods (LCOM)</XREF></H0>
<H0>Legacy code</H0>
<H1>characteristics, <PAGE><B>298</B></PAGE></H1>
<H1>definition, <PAGE>13</PAGE></H1>
<H1>exploration, <PAGE><B>301</B></PAGE></H1>
<H1>Microsoft Zune, <PAGE><I>306</I></PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H0>Lexical scoping, method calls, <PAGE>76</PAGE></H0>
<H0>Lightweight process, Agile, <PAGE><I>25</I></PAGE></H0>
<H0>Lines of code (LOC)</H0>
<H1>cost estimation, <PAGE>241</PAGE></H1>
<H1>legacy code exploration, <PAGE>303</PAGE></H1>
<H1>method length, <PAGE>312</PAGE></H1>
<H0>link_to, Rails app example, <PAGE>112, <I>114</I></PAGE></H0>
<H0>Linux</H0>
<H1>creation, <PAGE><I>444</I></PAGE></H1>
<H1>VirtualBox, <PAGE>443</PAGE></H1>
<H0>Liskov, Barbara, <PAGE>89, <I>376,</I> <I>392</I></PAGE></H0>
<H0>Liskov Substitution Principle (LSP)</H0>
<H1>example, <PAGE><I>374</I></PAGE></H1>
<H1>overview, <PAGE><B>376</B></PAGE></H1>
<H1>UML class diagram, <PAGE><I>377</I></PAGE></H1>
<H0>Lisp</H0>
<H1>dynamic typing, <PAGE><I>88</I></PAGE></H1>
<H1>inventor, <PAGE><I>10</I></PAGE></H1>
<H0>LiveScript, <PAGE>166, 205</PAGE></H0>
<H0>Load balancers, 3-tier architecture, <PAGE><I>52</I></PAGE></H0>
<H0>LOC, <XREF><I>see</I> Lines of code (LOC)</XREF></H0>
<H0>Lo-Fi user interface</H0>
<H1>sketches and storyboards, <PAGE><B>227</B></PAGE></H1>
<H1>sketches without storyboards, <PAGE>246</PAGE></H1>
<H1>TMDb example, <PAGE>230</PAGE></H1>
<H1>TMDb storyboard, <PAGE><I>232</I></PAGE></H1>
<H0>logger.debug, <PAGE>119</PAGE></H0>
<H0>Logic tier, 3-tier architecture, <PAGE>51</PAGE></H0>
<H0>Longevity testing, monitoring, <PAGE>406</PAGE></H0>
<H0>Long method, code smell, <PAGE>314</PAGE></H0>
<H0>Looking up a method, Ruby objects, <PAGE>74</PAGE></H0>
<H0>LSP, <XREF><I>see</I> Liskov Substitution Principle (LSP)</XREF></H0>
</GROUP>
<GROUP><B>M</B>
<H0>Mac OS X</H0>
<H1>Unix tools, <PAGE><I>447</I></PAGE></H1>
<H1>VirtualBox, <PAGE>443</PAGE></H1>
<H0>Magic number, code smells, <PAGE>316</PAGE></H0>
<H0>MailerMonkey, <PAGE>379, <I>381</I></PAGE></H0>
<H0>Maintainability, categories, <PAGE>298</PAGE></H0>
<H0>Maintenance manager, <PAGE>319</PAGE></H0>
<H0>Maintenance phase</H0>
<H1>characterization tests, <PAGE><B>304</B></PAGE></H1>
<H1>comments, <PAGE><B>308</B></PAGE></H1>
<H1>IEEE 1219-1998, <PAGE><I>321</I></PAGE></H1>
<H1>legacy code, <PAGE><B>298</B></PAGE></H1>
<H1>legacy code exploration, <PAGE><B>301</B></PAGE></H1>
<H1>metrics, code smells, SOFA, <PAGE><B>309</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>319</B></PAGE></H1>
<H1>refactoring, <PAGE><B>313</B></PAGE></H1>
<H0>Maintenance requests, <PAGE><I>320</I></PAGE></H0>
<H0>Maintenance software engineers, <PAGE>319</PAGE></H0>
<H0>Makefiles, automation, <PAGE>17</PAGE></H0>
<H0>Malicious attackers</H0>
<H1>authentication, <PAGE>146</PAGE></H1>
<H1>niche apps, <PAGE>424</PAGE></H1>
<H0>Malicious users, input checks, <PAGE><I>137</I></PAGE></H0>
<H0>Malware, deployment, <PAGE>399</PAGE></H0>
<H0>Man-in-the-middle attack, <PAGE>426</PAGE></H0>
<H0>Markup language, <PAGE>48</PAGE></H0>
<H0>Marshalling, <PAGE>57, <I>173</I></PAGE></H0>
<H0>Martin, Robert C., <PAGE>365</PAGE></H0>
<H0>Massive Open Online Course (MOOC)</H0>
<H1>book materials, <PAGE>4, <B>xviii</B></PAGE></H1>
<H1>enabling components, <PAGE>437</PAGE></H1>
<H0>Master-slave, three-tier architecture, <PAGE>52</PAGE></H0>
<H0>Match-condition, TMDb, <PAGE>265</PAGE></H0>
<H0>max method, Enumerable, <PAGE>88</PAGE></H0>
<H0>McCabe, Frank, Sr., <PAGE><I>310</I></PAGE></H0>
<H0>McCarthy, John, <PAGE><I>10</I></PAGE></H0>
<H0>MCDC, <XREF><I>see</I> Modified Condition/Decision Coverage (MCDC)</XREF></H0>
<H0>Mean time between repairs (MTTR), <PAGE>420</PAGE></H0>
<H0>Mean time to failure (MTTF), <PAGE>420</PAGE></H0>
<H0>Measurable, SMART user stories, <PAGE>219</PAGE></H0>
<H0>Mechanization of Contract Administration Services (MOCAS), <PAGE><I>13</I></PAGE></H0>
<H0>Merge-commit, <PAGE><I>340</I></PAGE></H0>
<H0>Merge conflicts, version control, <PAGE><B>336</B></PAGE></H0>
<H0>Merging</H0>
<H1>branches, pitfalls, <PAGE>354</PAGE></H1>
<H1>branch management, <PAGE><I>342</I></PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>Metaclass, Ruby objects, <PAGE><I>74</I></PAGE></H0>
<H0>Metaprogramming</H0>
<H1>abstract factory pattern, <PAGE><I>372</I></PAGE></H1>
<H1>conciseness, <PAGE><I>113</I></PAGE></H1>
<H1>productivity improvement, <PAGE>16</PAGE></H1>
<H1>programming as, <PAGE><B>81</B></PAGE></H1>
<H1>Rails reuse, <PAGE>6</PAGE></H1>
<H1>route helpers, <PAGE><I>113</I></PAGE></H1>
<H1>scopes, <PAGE><I>158</I></PAGE></H1>
<H1>XML Builder, <PAGE><I>87</I></PAGE></H1>
<H0>Method</H0>
<H1>collections, <PAGE><I>86</I></PAGE></H1>
<H1>definition, <PAGE>59, <I>256</I></PAGE></H1>
<H1>definition with self, <PAGE><I>80</I></PAGE></H1>
<H1>length, <PAGE><I>312</I></PAGE></H1>
<H1>naming issues, <PAGE>93</PAGE></H1>
<H1>private, in class, <PAGE>388</PAGE></H1>
<H1>RSpec listing, <PAGE><I>280,</I> <I>281</I></PAGE></H1>
<H1>Ruby objects, <PAGE>74, <B>78</B></PAGE></H1>
<H0>Method call</H0>
<H1>number of arguments, <PAGE><I>77</I></PAGE></H1>
<H1>operation as, <PAGE><B>75</B></PAGE></H1>
<H0>Method chaining, Ruby objects, <PAGE>74</PAGE></H0>
<H0>Method coverage (S0), <PAGE>282</PAGE></H0>
<H0>method_missing</H0>
<H1>metaprogramming, <PAGE>81</PAGE></H1>
<H1>Rails app example, <PAGE>108</PAGE></H1>
<H1>XML Builder, <PAGE><I>87</I></PAGE></H1>
<H0>Method stub, Red&ndash;Green&ndash;Refactor TDD, <PAGE>263</PAGE></H0>
<H0>Metrics, <XREF><I>see</I> Software metrics</XREF></H0>
<H0>Microsoft</H0>
<H1>Agile lifecycle, <PAGE>27</PAGE></H1>
<H1>fuzz testing, <PAGE>285</PAGE></H1>
<H1>JavaScript engines, <PAGE>207</PAGE></H1>
<H1>OAuth, <PAGE><I>142</I></PAGE></H1>
<H1>pair programming, <PAGE>334</PAGE></H1>
<H1>public cloud, <PAGE>395</PAGE></H1>
<H1>software education, <PAGE>xiv</PAGE></H1>
<H1>Windows 95 release, <PAGE><I>19</I></PAGE></H1>
<H1>XmlHttpRequest, <PAGE>185</PAGE></H1>
<H0>Microsoft Azure, <PAGE>12, 395, 411</PAGE></H0>
<H0>Microsoft Internet Information Server, <PAGE>42</PAGE></H0>
<H0>Microsoft JScript, <PAGE><I>166</I></PAGE></H0>
<H0>Microsoft Office 365, <PAGE>5, 432</PAGE></H0>
<H0>Microsoft Office Excel 2013, <PAGE>437</PAGE></H0>
<H0>Microsoft Word, code editing, <PAGE>445</PAGE></H0>
<H0>Microsoft Zune, <PAGE><I>306,</I> <I>307</I></PAGE></H0>
<H0>Middleware, <PAGE><I>51</I></PAGE></H0>
<H0>Migrations</H0>
<H1>atomic, <PAGE>400</PAGE></H1>
<H1>database modifications, <PAGE>129</PAGE></H1>
<H1>example, <PAGE><I>401</I></PAGE></H1>
<H1>foreign keys, <PAGE><I>149</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>104,</B> 105, <I>106</I></PAGE></H1>
<H1>seeding comparison, <PAGE><I>109</I></PAGE></H1>
<H0>Minifying, <PAGE><I>173</I></PAGE></H0>
<H0>min method, Enumerable, <PAGE>88</PAGE></H0>
<H0>Mix-ins, <PAGE><B>88</B></PAGE></H0>
<H1>design pattern expression, <PAGE><I>385</I></PAGE></H1>
<H1>Rails reuse, <PAGE>6</PAGE></H1>
<H1>reuse, <PAGE>17</PAGE></H1>
<H0>MOCAS, <XREF><I>see</I> Mechanization of Contract Administration Services (MOCAS)</XREF></H0>
<H0>Mocks</H0>
<H1>definition, <PAGE><I>263</I></PAGE></H1>
<H1>Movie object, <PAGE>269</PAGE></H1>
<H1>TMDb, <PAGE><B>265</B></PAGE></H1>
<H0>Mock trainwreck, <PAGE>291, 383</PAGE></H0>
<H0>Mock-ups, completed feature distinction, <PAGE>246</PAGE></H0>
<H0>Model checking, <PAGE>287</PAGE></H0>
<H0>Models</H0>
<H1>ActiveRecords, <PAGE><B>57,</B> <B>107</B></PAGE></H1>
<H1>MVC, <PAGE>54, <I>108</I></PAGE></H1>
<H0>Model&ndash;View&ndash;Controller (MVC)</H0>
<H1>app requests, <PAGE><I>56</I></PAGE></H1>
<H1>controller function, <PAGE>259</PAGE></H1>
<H1>DRY, <PAGE><B>136</B></PAGE></H1>
<H1>implementation detail exposure, <PAGE>157</PAGE></H1>
<H1>JavaScript, <PAGE>166</PAGE></H1>
<H1>model behaviors, <PAGE><I>108</I></PAGE></H1>
<H1>observer pattern, <PAGE><I>384</I></PAGE></H1>
<H1>overview, <PAGE><B>54</B></PAGE></H1>
<H1>Rails basics, <PAGE>100, <I>101</I></PAGE></H1>
<H1>template views, <PAGE>63</PAGE></H1>
<H1>web app comparison, <PAGE><I>55</I></PAGE></H1>
<H0>Modified Condition/Decision Coverage (MCDC), <PAGE>283</PAGE></H0>
<H0>Module</H0>
<H1>definition, <PAGE>88</PAGE></H1>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H0>Module testing, <PAGE>14</PAGE></H0>
<H0>Mojito, <PAGE>207</PAGE></H0>
<H0>MongoDB, DataMapper, <PAGE><I>150</I></PAGE></H0>
<H0>Monitoring</H0>
<H1>approaches, <PAGE>425</PAGE></H1>
<H1>overview, <PAGE><B>405</B></PAGE></H1>
<H1>plan-and-document, <PAGE>242</PAGE></H1>
<H1>types, <PAGE><I>406</I></PAGE></H1>
<H0>MOOC, <XREF><I>see</I> Massive Open Online Course (MOOC)</XREF></H0>
<H0>Moore's Law, productivity improvement, <PAGE>15</PAGE></H0>
<H0>Movie class</H0>
<H1>blocks example, <PAGE>84</PAGE></H1>
<H1>mock usage, <PAGE>269</PAGE></H1>
<H1>models, <PAGE>107</PAGE></H1>
<H1>Ruby objects, <PAGE>78</PAGE></H1>
<H0>MoviesController class</H0>
<H1>Rails basics, <PAGE>103, 111</PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>262</PAGE></H1>
<H1>RSpec, <PAGE>260, <I>260</I></PAGE></H1>
<H0>MSN, <PAGE>42</PAGE></H0>
<H0>MTTF, <XREF><I>see</I> Mean time to failure (MTTF)</XREF></H0>
<H0>MTTR, <XREF><I>see</I> Mean time between repairs (MTTR)</XREF></H0>
<H0>Multi-homing, networking explanation, <PAGE><I>45</I></PAGE></H0>
<H0>Multiplicity, UML, <PAGE>368</PAGE></H0>
<H0>Mutation testing</H0>
<H1>definition, <PAGE>285</PAGE></H1>
<H1>software, <PAGE>15</PAGE></H1>
<H0>MVC, <XREF><I>see</I> Model&ndash;View&ndash;Controller (MVC)</XREF></H0>
<H0>MySQL</H0>
<H1>cloud deployment, <PAGE><I>451</I></PAGE></H1>
<H1>EXPLAIN, <PAGE><I>414</I></PAGE></H1>
</GROUP>
<GROUP><B>N</B>
<H0>Naming</H0>
<H1>bugs, <PAGE>423</PAGE></H1>
<H1>caching, <PAGE>407</PAGE></H1>
<H0>NAT, <XREF><I>see</I> Network address translation (NAT)</XREF></H0>
<H0>Naur, Peter, <PAGE><I>164</I></PAGE></H0>
<H0>Navigator, pair programming, <PAGE>334</PAGE></H0>
<H0>Nebraska Student Information System, <PAGE>419</PAGE></H0>
<H0>Negative expectations, careless use, <PAGE>247</PAGE></H0>
<H0>Nested resources, <PAGE>160</PAGE></H0>
<H0>NetBeans, <PAGE>445</PAGE></H0>
<H0>Netflix, OAuth, <PAGE><I>142</I></PAGE></H0>
<H0>Network address translation (NAT), VM networking, <PAGE><I>444</I></PAGE></H0>
<H0>Networking</H0>
<H1>early work, <PAGE><I>44</I></PAGE></H1>
<H1>explanation, <PAGE><I>45</I></PAGE></H1>
<H0>Network interface device, <PAGE><I>45</I></PAGE></H0>
<H0>Network protocol, <PAGE>44</PAGE></H0>
<H0>new</H0>
<H1>associations, <PAGE>154</PAGE></H1>
<H1>form submission, <PAGE><B>120</B></PAGE></H1>
<H1>JavaScript, <PAGE>174, <I>176</I></PAGE></H1>
<H1>partial, <PAGE><I>136</I></PAGE></H1>
<H0>New Relic, <PAGE>405, 425</PAGE></H0>
<H0>NewtonScript, <PAGE><I>176</I></PAGE></H0>
<H0>New York Times</H0>
<H1>Facebook Connect, <PAGE><I>146</I></PAGE></H1>
<H1>Facebook Platform, <PAGE>7</PAGE></H1>
<H0>nil</H0>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>264</PAGE></H1>
<H1>Ruby regular expressions, <PAGE>72</PAGE></H1>
<H0>NilClass, debugging, <PAGE>118</PAGE></H0>
<H0>Node.js, <PAGE>166, 207</PAGE></H0>
<H0>Non-functional requirements</H0>
<H1>abusive database queries, <PAGE><B>411</B></PAGE></H1>
<H1>availability quantification, <PAGE><B>404</B></PAGE></H1>
<H1>caching, <PAGE><B>407</B></PAGE></H1>
<H1>continuous integration and deployment, <PAGE><B>398</B></PAGE></H1>
<H1>deployment, <PAGE><B>394</B></PAGE></H1>
<H1>elicitation, <PAGE>239</PAGE></H1>
<H1>monitoring and bottlenecks, <PAGE><B>405</B></PAGE></H1>
<H1>overview, <PAGE><B>424</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>419</B></PAGE></H1>
<H1>releases and feature flags, <PAGE><B>400</B></PAGE></H1>
<H1>responsiveness quantification, <PAGE><B>396</B></PAGE></H1>
<H1>security, <PAGE><B>414</B></PAGE></H1>
<H0>NoSQL storage systems, DataMapper, <PAGE><I>150</I></PAGE></H0>
<H0>n + 1 queries, <PAGE>412</PAGE></H0>
<H0>Null Object pattern, <PAGE>380, <I>380</I></PAGE></H0>
<H0>Nygaard, Kristen, <PAGE><I>134</I></PAGE></H0>
</GROUP>
<GROUP><B>O</B>
<H0>OAuth, <PAGE><I>142</I></PAGE></H0>
<H0>Object class, Ruby, <PAGE>79</PAGE></H0>
<H0>Object literals, client-side JavaScript, <PAGE>169, 171</PAGE></H0>
<H0>Object-orientation (OO)</H0>
<H1>Ruby objects, <PAGE>74</PAGE></H1>
<H1>seams, <PAGE><I>265</I></PAGE></H1>
<H1>Turing Award, <PAGE><I>134</I></PAGE></H1>
<H0>Object-oriented programming</H0>
<H1>reuse, <PAGE>17</PAGE></H1>
<H1>Turing Award, <PAGE><I>432</I></PAGE></H1>
<H0>Objects, Ruby, <PAGE><B>73</B></PAGE></H0>
<H0>Observer pattern</H0>
<H1>Demeter Principle, <PAGE>384</PAGE></H1>
<H1>example, <PAGE><I>384</I></PAGE></H1>
<H1>expression, <PAGE><I>385</I></PAGE></H1>
<H1>pair programming, <PAGE>334</PAGE></H1>
<H1>Smalltalk implementation, <PAGE><I>384</I></PAGE></H1>
<H0>OCP, <XREF><I>see</I> Open/Closed Principle (OCP)</XREF></H0>
<H0>OmniAuth</H0>
<H1>authentication, <PAGE>143</PAGE></H1>
<H1>example, <PAGE><I>144</I></PAGE></H1>
<H1>Strategy pattern, <PAGE>373</PAGE></H1>
<H1>Twitter, <PAGE>145</PAGE></H1>
<H0>OO, <XREF><I>see</I> Object-orientation (OO)</XREF></H0>
<H0>OpenCL, JavaScript, <PAGE>207</PAGE></H0>
<H0>Open/Closed Principle (OCP), <PAGE><B>371,</B> <I>381</I></PAGE></H0>
<H0>OpenID, <PAGE>396</PAGE></H0>
<H0>Open source software, Linux and GNU, <PAGE><I>444</I></PAGE></H0>
<H0>Operation, method call, <PAGE><B>75</B></PAGE></H0>
<H0>Origin</H0>
<H1>sync issues, <PAGE>354</PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>Overloading, jQuery, <PAGE>178</PAGE></H0>
<H0>&quot;Owning&quot;</H0>
<H1>associations, <PAGE>155</PAGE></H1>
<H1>before-filters, <PAGE><I>156</I></PAGE></H1>
</GROUP>
<GROUP><B>P</B>
<H0>PaaS, <XREF><I>see</I> Platform as a Service (PaaS)</XREF></H0>
<H0>Page caching, <PAGE>408, <I>411</I></PAGE></H0>
<H0>Page Controller</H0>
<H1>MVC, <PAGE>54</PAGE></H1>
<H1>web app comparison, <PAGE><I>55</I></PAGE></H1>
<H0>Pair programming, <PAGE><B>333</B></PAGE></H0>
<H1>Agile, <PAGE>xv</PAGE></H1>
<H1>example, <PAGE><I>334</I></PAGE></H1>
<H1>member dynamics, <PAGE>353</PAGE></H1>
<H0>Palm webOS, <PAGE>207</PAGE></H0>
<H0>params[]</H0>
<H1>associations, <PAGE>155</PAGE></H1>
<H1>authentication, <PAGE>145</PAGE></H1>
<H1>create action, <PAGE><I>122</I></PAGE></H1>
<H1>form submission, <PAGE>121</PAGE></H1>
<H1>Rails app example, <PAGE><I>104</I></PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>262</PAGE></H1>
<H0>Parentheses</H0>
<H1>number of arguments, <PAGE><I>77</I></PAGE></H1>
<H1>poetry mode, <PAGE>76</PAGE></H1>
<H1>Ruby regular expressions, <PAGE>72</PAGE></H1>
<H0>Partial</H0>
<H1>DRY, <PAGE>136</PAGE></H1>
<H1>example, <PAGE><I>136,</I> <I>137</I></PAGE></H1>
<H1>JavaScript, <PAGE><I>136</I></PAGE></H1>
<H1>new/edit templates, <PAGE><I>136</I></PAGE></H1>
<H0>Partial URI, <PAGE><I>45</I></PAGE></H0>
<H0>Pastebin, <PAGE><I>50,</I> <I>102,</I> <I>217</I></PAGE></H0>
<H0>Patches, legacy code, <PAGE>299</PAGE></H0>
<H0>Path coverage (C2), <PAGE>283</PAGE></H0>
<H0>Patterns, <XREF><I>see also</I> Design patterns</XREF></H0>
<H1>active record architecture, <PAGE>58</PAGE></H1>
<H1>AmikoAdapter, <PAGE><I>381</I></PAGE></H1>
<H1>factory, initialize, <PAGE>388</PAGE></H1>
<H1>reliance on, <PAGE>387</PAGE></H1>
<H1>Transform View, <PAGE><I>64</I></PAGE></H1>
<H1>types, <PAGE><I>366</I></PAGE></H1>
<H0>Payment Card Industry, <PAGE>417</PAGE></H0>
<H0>PayPal, <PAGE>417</PAGE></H0>
<H0>PdfFormatter, <PAGE>373, <I>374</I></PAGE></H0>
<H0>Peer-to-peer architecture, <PAGE>43</PAGE></H0>
<H0>Penetration tests, <PAGE>421</PAGE></H0>
<H0>People management, plan-and-document, <PAGE>348</PAGE></H0>
<H0>Per-computer performance, <PAGE>65</PAGE></H0>
<H0>Perfective maintenance, <PAGE>298</PAGE></H0>
<H0>Performance</H0>
<H1>apps in development, <PAGE>422</PAGE></H1>
<H1>cloud computing scalability, <PAGE>422</PAGE></H1>
<H1>database, caching, <PAGE><B>407</B></PAGE></H1>
<H1>fast computer fallacies, <PAGE>422</PAGE></H1>
<H1>optimization with measurement, <PAGE>422</PAGE></H1>
<H1>overview, <PAGE><B>424</B></PAGE></H1>
<H1>plan-and-document, <PAGE>419</PAGE></H1>
<H1>SOA servers, <PAGE>423</PAGE></H1>
<H0>Perlis, Alan, <PAGE><I>164</I></PAGE></H0>
<H0>Persistence tier, 3-tier architecture, <PAGE>51</PAGE></H0>
<H0>PERT, <XREF><I>see</I> Program Evaluation and Review Technique (PERT)</XREF></H0>
<H0>PhoneGap, <PAGE>206</PAGE></H0>
<H0>PHP</H0>
<H1>DataMapper, <PAGE><I>151</I></PAGE></H1>
<H1>template views, <PAGE>63</PAGE></H1>
<H0>Pitfall, <PAGE>32</PAGE></H0>
<H0>Pivotal Labs</H0>
<H1>Agile cost estimation, <PAGE>222</PAGE></H1>
<H1>Jasmine, <PAGE>190</PAGE></H1>
<H1>pair programming, <PAGE><I>334</I></PAGE></H1>
<H1>software consultancy, <PAGE><I>222</I></PAGE></H1>
<H0>Pivotal Tracker</H0>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>bookware, <PAGE>442</PAGE></H1>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>UI, <PAGE><I>221</I></PAGE></H1>
<H1>user stories, <PAGE><B>220</B></PAGE></H1>
<H0>Plan-and-Document</H0>
<H1>Agile comparison, <PAGE>25, 26, <I>245</I></PAGE></H1>
<H1>Agile testing comparison, <PAGE><I>289</I></PAGE></H1>
<H1>BDD pros and cons, <PAGE>249</PAGE></H1>
<H1>CMM, <PAGE><I>23</I></PAGE></H1>
<H1>decision to use, <PAGE><I>26</I></PAGE></H1>
<H1>design patterns, <PAGE><B>386</B></PAGE></H1>
<H1>early version, <PAGE>18</PAGE></H1>
<H1>formal specification languages, <PAGE><I>241</I></PAGE></H1>
<H1>function points, <PAGE><I>242</I></PAGE></H1>
<H1>IEEE Standard 829-2008, <PAGE><I>288</I></PAGE></H1>
<H1>IEEE Standard 830-1998, <PAGE><I>240</I></PAGE></H1>
<H1>lifecycle goals, <PAGE>21</PAGE></H1>
<H1>maintenance phase, <PAGE><B>319</B></PAGE></H1>
<H1>maintenance plan example, <PAGE><I>321</I></PAGE></H1>
<H1>major tasks, <PAGE>238</PAGE></H1>
<H1>non-functional requirements, <PAGE><B>419</B></PAGE></H1>
<H1>overview, <PAGE><B>18,</B> <I>243</I></PAGE></H1>
<H1>productivity comparisons, <PAGE><I>28</I></PAGE></H1>
<H1>project management, <PAGE><B>345,</B> 355</PAGE></H1>
<H1>RUP, <PAGE>21, <I>22</I></PAGE></H1>
<H1>software metrics, <PAGE><I>310</I></PAGE></H1>
<H1>Spiral lifecycle, <PAGE>19, <I>20</I></PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H1>testing overview, <PAGE><B>286</B></PAGE></H1>
<H1>user stories, <PAGE><B>238</B></PAGE></H1>
<H1>Waterfall lifecycle, <PAGE>19</PAGE></H1>
<H0>Plan-driven processes, <PAGE><I>21</I></PAGE></H0>
<H0>Platform as a Service (PaaS)</H0>
<H1>data encryption, <PAGE>414</PAGE></H1>
<H1>deployment, <PAGE>395</PAGE></H1>
<H1>monitoring, <PAGE>405</PAGE></H1>
<H1>rolling reboot, <PAGE>404</PAGE></H1>
<H0>Poetry mode, <PAGE>76</PAGE></H0>
<H0>Pointcut, AOP, <PAGE><I>141</I></PAGE></H0>
<H0>Points</H0>
<H1>BDD pros and cons, <PAGE>249</PAGE></H1>
<H1>plan-and-document, <PAGE>238</PAGE></H1>
<H1>user stories, <PAGE><B>220</B></PAGE></H1>
<H0>Port numbers</H0>
<H1>IANA assignment, <PAGE><I>45</I></PAGE></H1>
<H1>TCP/IP, <PAGE>45</PAGE></H1>
<H1>URI, <PAGE>45</PAGE></H1>
<H0>Positive expectations, careless use, <PAGE>247</PAGE></H0>
<H0>POSIX, <PAGE>207</PAGE></H0>
<H0>post</H0>
<H1>functional tests, <PAGE>283</PAGE></H1>
<H1>TMDb, <PAGE>265</PAGE></H1>
<H0>POST, GET comparison, <PAGE><I>128</I></PAGE></H0>
<H0>PostgreSQL, <PAGE><I>413,</I> <I>414,</I> 451</PAGE></H0>
<H0>Post-receive URI repo, GitHub, <PAGE>399</PAGE></H0>
<H0>Preflight checking, feature flags, <PAGE><I>403</I></PAGE></H0>
<H0>Presentation tier, <PAGE>51</PAGE></H0>
<H0>Preventive maintenance, <PAGE>299</PAGE></H0>
<H0>Principal</H0>
<H1>authentication, <PAGE>142</PAGE></H1>
<H1>public-key cryptography, <PAGE>415</PAGE></H1>
<H0>Principle of fail-safe defaults, <PAGE>414</PAGE></H0>
<H0>Principle of least privilege</H0>
<H1>authentication, <PAGE>146</PAGE></H1>
<H1>security, <PAGE>414</PAGE></H1>
<H0>Principle of psychological acceptability, <PAGE>414</PAGE></H0>
<H0>printf debugging, <PAGE><I>119</I></PAGE></H0>
<H0>Privacy, <PAGE>395</PAGE></H0>
<H0>Private methods, classes, <PAGE>388</PAGE></H0>
<H0>Probing, <PAGE>406</PAGE></H0>
<H0>Production clients, <PAGE>42</PAGE></H0>
<H0>Production database, legacy code exploration, <PAGE><I>302</I></PAGE></H0>
<H0>Productivity</H0>
<H1>Agile <I>vs.</I> plan-and-document, <PAGE><I>28</I></PAGE></H1>
<H1>improvement, <PAGE><B>15</B></PAGE></H1>
<H0>Product owner, Scrum, <PAGE>333</PAGE></H0>
<H0>Profiling, <PAGE>405</PAGE></H0>
<H0>Program Evaluation and Review Technique (PERT), <PAGE><I>242</I></PAGE></H0>
<H0>Programming frameworks, languages for, <PAGE><I>5</I></PAGE></H0>
<H0>Programming languages</H0>
<H1>productivity improvement, <PAGE>16</PAGE></H1>
<H1>refactoring, <PAGE><I>319</I></PAGE></H1>
<H1>SaaS frameworks, <PAGE><I>5</I></PAGE></H1>
<H1>seams, <PAGE><I>265</I></PAGE></H1>
<H1>style sheets, <PAGE><I>333</I></PAGE></H1>
<H1>Turing Award, <PAGE><I>98,</I> <I>164,</I> <I>214,</I> <I>254,</I> <I>287,</I> <I>392</I></PAGE></H1>
<H0>Program synthesis, <PAGE>435</PAGE></H0>
<H0>Progstr-Filer, <PAGE>417</PAGE></H0>
<H0>ProjectLocker</H0>
<H1>basic skills, <PAGE><B>447</B></PAGE></H1>
<H1>bookware, <PAGE>442</PAGE></H1>
<H1>coursework backup, <PAGE>445</PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>Project management</H0>
<H1>bugs, <PAGE><B>343</B></PAGE></H1>
<H1>code reviews, <PAGE><B>335</B></PAGE></H1>
<H1>Git branches, <PAGE><B>339</B></PAGE></H1>
<H1>IEEE 16326-2009, <PAGE><I>346</I></PAGE></H1>
<H1>overview, <PAGE><B>354</B></PAGE></H1>
<H1>pair programming, <PAGE><B>333</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>345</B></PAGE></H1>
<H1>two-pizza team and Scrum, <PAGE><B>332</B></PAGE></H1>
<H1>version control, <PAGE><B>336</B></PAGE></H1>
<H0>Promiscuous pairing, <PAGE>334</PAGE></H0>
<H0>Properties, client-side JavaScript, <PAGE>169</PAGE></H0>
<H0>protect_from_forgery, <PAGE>416</PAGE></H0>
<H0>Prototype inheritance, JavaScript, <PAGE>174, <I>176</I></PAGE></H0>
<H0>Prototyping, Spiral lifecycle, <PAGE>19, <I>20</I></PAGE></H0>
<H0>Provenance, authentication, <PAGE>142</PAGE></H0>
<H0>Proxy object, Rails app example, <PAGE><I>110</I></PAGE></H0>
<H0>Proxy pattern, DIP, <PAGE>380</PAGE></H0>
<H0>Public cloud services, <XREF><I>see</I> Utility computing</XREF></H0>
<H0>Public-key cryptography</H0>
<H1>basic concept, <PAGE>415</PAGE></H1>
<H1>networking explanation, <PAGE><I>45</I></PAGE></H1>
<H1>Turing Award, <PAGE><I>414</I></PAGE></H1>
<H0>Public repos, remote collaboration, <PAGE><I>339</I></PAGE></H0>
<H0>Pull changes, version control, <PAGE>336</PAGE></H0>
<H0>Pull requests, GitHub, <PAGE>335</PAGE></H0>
<H0>Push changes</H0>
<H1>confusion with commit, <PAGE>453</PAGE></H1>
<H1>git hosting services, <PAGE>447</PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
</GROUP>
<GROUP><B>Q</B>
<H0>QA, <XREF><I>see</I> Quality assurance (QA)</XREF></H0>
<H0>Quality, definition, <PAGE>13</PAGE></H0>
<H0>Quality assurance (QA)</H0>
<H1>bugs, <PAGE>343</PAGE></H1>
<H1>overview, <PAGE>258</PAGE></H1>
<H1>testing overview, <PAGE><B>13</B></PAGE></H1>
<H0>Queries, composition with reusable scopes, <PAGE><B>157</B></PAGE></H0>
<H0>Query plan, EXPLAIN, <PAGE><I>414</I></PAGE></H0>
<H0>quirksmode.org, <PAGE><I>168</I></PAGE></H0>
</GROUP>
<GROUP><B>R</B>
<H0>Rack application server</H0>
<H1>continuous integration, <PAGE>399</PAGE></H1>
<H1>Decorator, <PAGE>373</PAGE></H1>
<H1>Rails basics, <PAGE>51, 100</PAGE></H1>
<H0>RailsCasts, <PAGE><I>238</I></PAGE></H0>
<H0>Rails concepts, <XREF><I>see also</I> Ruby on Rails basics</XREF></H0>
<H1>associations and foreign keys, <PAGE><B>147</B></PAGE></H1>
<H1>caching, <PAGE>407</PAGE></H1>
<H1>controllers and views, <PAGE><B>111</B></PAGE></H1>
<H1>databases and migrations, <PAGE><B>104</B></PAGE></H1>
<H1>debugging, <PAGE><B>117</B></PAGE></H1>
<H1>edit/update and destroy, <PAGE><B>125</B></PAGE></H1>
<H1>form submission, <PAGE><B>120</B></PAGE></H1>
<H1>models, <PAGE><B>107</B></PAGE></H1>
<H1>MVC DRYness, <PAGE><B>136</B></PAGE></H1>
<H1>overview, <PAGE><B>100</B></PAGE></H1>
<H1>queries with reusable scopes, <PAGE><B>157</B></PAGE></H1>
<H1>redirection and flash, <PAGE><B>122</B></PAGE></H1>
<H1>RESTful routes for associations, <PAGE><B>154</B></PAGE></H1>
<H1>security defenses, <PAGE><I>418</I></PAGE></H1>
<H1>SSO and third-party authentication, <PAGE><B>142</B></PAGE></H1>
<H1>through-associations, <PAGE><B>152</B></PAGE></H1>
<H0>raise params.inspect, debugging, <PAGE>119</PAGE></H0>
<H0>rake cucumber, <PAGE><I>231</I></PAGE></H0>
<H0>rake jasmine, <PAGE><I>192</I></PAGE></H0>
<H0>RASP (Read, Ask, Search, Post), debugging, <PAGE>117</PAGE></H0>
<H0>Rational Unified Process (RUP)</H0>
<H1>design/code reviews, <PAGE>348</PAGE></H1>
<H1>overview, <PAGE><I>22</I></PAGE></H1>
<H1>plan-and-document, <PAGE>21</PAGE></H1>
<H1>tasks, <PAGE>239</PAGE></H1>
<H0>RCS, <XREF><I>see</I> Revision Control System (RCS)</XREF></H0>
<H0>RDBMS, <XREF><I>see</I> Relational database management system (RDBMS)</XREF></H0>
<H0>RDoc, <PAGE><I>301</I></PAGE></H0>
<H0>Rebasing</H0>
<H1>definition, <PAGE><I>343</I></PAGE></H1>
<H1>Git, <PAGE><I>337</I></PAGE></H1>
<H0>Receiver</H0>
<H1>methods on collections, <PAGE><I>86</I></PAGE></H1>
<H1>Ruby objects, <PAGE>74</PAGE></H1>
<H0>Rectangle</H0>
<H1>duck typing, <PAGE>378</PAGE></H1>
<H1>example, <PAGE><I>376</I></PAGE></H1>
<H1>LSP, <PAGE>376</PAGE></H1>
<H0>Red&ndash;Green&ndash;Refactor</H0>
<H1>final task, <PAGE>267</PAGE></H1>
<H1>overview, <PAGE><B>258</B></PAGE></H1>
<H1>TDD, <PAGE><I>261</I></PAGE></H1>
<H0>Redirection</H0>
<H1>example, <PAGE><I>140</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>122</B></PAGE></H1>
<H0>Red&ndash;Refactor&ndash;Green&ndash;Refactor, existing code, <PAGE><I>279</I></PAGE></H0>
<H0>Red&ndash;Yellow&ndash;Green analysis, Cucumber user stories, <PAGE>226</PAGE></H0>
<H0>Reengineering, <PAGE>322</PAGE></H0>
<H0>Refactoring</H0>
<H1>change points, <PAGE>300</PAGE></H1>
<H1>clean code example, <PAGE><I>318</I></PAGE></H1>
<H1>code smells, SOFA, <PAGE>311</PAGE></H1>
<H1>continuous, <PAGE><B>325</B></PAGE></H1>
<H1>definition, <PAGE>299, 314</PAGE></H1>
<H1>examples, <PAGE><I>315,</I> <I>326</I></PAGE></H1>
<H1>existing code, <PAGE><I>279</I></PAGE></H1>
<H1>Extract Class, <PAGE>370</PAGE></H1>
<H1>language choice, <PAGE><I>319</I></PAGE></H1>
<H1>method-level, <PAGE><B>313</B></PAGE></H1>
<H1>resisting enhancements, <PAGE>324</PAGE></H1>
<H0>Reflection</H0>
<H1>conciseness, <PAGE><I>113</I></PAGE></H1>
<H1>productivity improvement, <PAGE>16</PAGE></H1>
<H1>Ruby objects, <PAGE>74</PAGE></H1>
<H0>regexps, <XREF><I>see</I> Regular expressions (regexps)</XREF></H0>
<H0>Regression testing</H0>
<H1>maintenance, <PAGE>320</PAGE></H1>
<H1>purpose, <PAGE>14</PAGE></H1>
<H0>Regular expressions (regexps)</H0>
<H1>Cucumber, <PAGE>224</PAGE></H1>
<H1>Ruby overview, <PAGE>70, <I>72</I></PAGE></H1>
<H0>Relational algebra formalism, <PAGE><I>57</I></PAGE></H0>
<H0>Relational database, storage structure, <PAGE><I>53</I></PAGE></H0>
<H0>Relational database management system (RDBMS)</H0>
<H1>active record architectural pattern, <PAGE>58</PAGE></H1>
<H1>design, <PAGE>57</PAGE></H1>
<H1>example table, <PAGE><I>57</I></PAGE></H1>
<H1>Rails app example, <PAGE>104</PAGE></H1>
<H1>scalability, <PAGE>64</PAGE></H1>
<H0>Release branch</H0>
<H1>definition, <PAGE>340</PAGE></H1>
<H1>example, <PAGE><I>341</I></PAGE></H1>
<H0>Release management</H0>
<H1>definition, <PAGE>351, 395</PAGE></H1>
<H1>plan-and-document, <PAGE>419</PAGE></H1>
<H0>Relevant, SMART user stories, <PAGE>219</PAGE></H0>
<H0>Reliability</H0>
<H1>overview, <PAGE><B>424</B></PAGE></H1>
<H1>plan-and-document, <PAGE>420</PAGE></H1>
<H0>Reloading, Rails app example, <PAGE><I>103</I></PAGE></H0>
<H0>Remote, git hosting services, <PAGE>447</PAGE></H0>
<H0>Remote collaboration, Git, <PAGE><I>339</I></PAGE></H0>
<H0>Remote Performance Monitoring (RPM), <PAGE>405</PAGE></H0>
<H0>Rendering, caching, <PAGE><B>407</B></PAGE></H0>
<H0>Repetition, SOLID, <PAGE>365</PAGE></H0>
<H0>Replication, database scaling, <PAGE>426</PAGE></H0>
<H0>Reply, client-server architecture, <PAGE>42</PAGE></H0>
<H0>Repositories</H0>
<H1>adding files, <PAGE>453</PAGE></H1>
<H1>Git basics, <PAGE>446</PAGE></H1>
<H1>remote collaboration, <PAGE><I>339</I></PAGE></H1>
<H1>version control, <PAGE>336</PAGE></H1>
<H0>Representational State Transfer (REST)</H0>
<H1>AJAX, <PAGE>186</PAGE></H1>
<H1>Amiko, <PAGE>379</PAGE></H1>
<H1>API, <PAGE><B>256</B></PAGE></H1>
<H1>API, and developer keys, <PAGE><I>257</I></PAGE></H1>
<H1>associations, <PAGE><B>154,</B> <I>157</I></PAGE></H1>
<H1>caching, <PAGE>408, 423</PAGE></H1>
<H1>controllers, <PAGE>111, <I>112,</I> <I>114</I></PAGE></H1>
<H1>CRUD, <PAGE>102, <I>103,</I> 125</PAGE></H1>
<H1>CSRF, <PAGE>416</PAGE></H1>
<H1>form submission, <PAGE>120</PAGE></H1>
<H1>index action, <PAGE>123</PAGE></H1>
<H1>JSON APIs, <PAGE>199</PAGE></H1>
<H1>metaprogramming, <PAGE><I>113</I></PAGE></H1>
<H1>overview, <PAGE><B>59</B></PAGE></H1>
<H1>same-origin policy, <PAGE><I>202</I></PAGE></H1>
<H1>session[] hash overstuffing, <PAGE>130</PAGE></H1>
<H1>SOA, <PAGE><I>61</I></PAGE></H1>
<H1>SOAP/WS-* comparison, <PAGE><I>62</I></PAGE></H1>
<H1>SRP, <PAGE>369</PAGE></H1>
<H1>template views, <PAGE>63</PAGE></H1>
<H1>TMDb, <PAGE>278</PAGE></H1>
<H1>TMDb API, <PAGE><I>257</I></PAGE></H1>
<H0>Request, <XREF><I>see also</I> HTTP request</XREF></H0>
<H1>AJAX, <PAGE>186</PAGE></H1>
<H1>client-server architecture, <PAGE>42</PAGE></H1>
<H0>Request-reply protocol, HTTP, <PAGE><I>47</I></PAGE></H0>
<H0>Request tracing, <PAGE>425</PAGE></H0>
<H0>require, confusion with include, <PAGE>93</PAGE></H0>
<H0>Requirements basics, <XREF><I>see also</I> Non-functional requirements</XREF></H0>
<H1>Agile cost estimation, <PAGE><B>222</B></PAGE></H1>
<H1>BDD and user stories, <PAGE><B>216</B></PAGE></H1>
<H1>Cucumber and Capybara, <PAGE><B>224,</B> <B>226</B></PAGE></H1>
<H1>Lo-Fi interface sketches and storyboards, <PAGE><B>227</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>238</B></PAGE></H1>
<H1>points, velocity, Pivotal Tracker, <PAGE><B>220</B></PAGE></H1>
<H1>Rotten Potatoes enhancement, <PAGE><B>230</B></PAGE></H1>
<H1>scenario comparisons, <PAGE><B>236</B></PAGE></H1>
<H1>SMART user stories, <PAGE><B>219</B></PAGE></H1>
<H0>Requirements creep, <PAGE><I>244</I></PAGE></H0>
<H0>Requirements traceability, <PAGE>244</PAGE></H0>
<H0>require 'ruby-debug,' <PAGE><I>119</I></PAGE></H0>
<H0>Resource</H0>
<H1>URI, <PAGE>45</PAGE></H1>
<H1>Web app as, <PAGE>59</PAGE></H1>
<H0>response, controller specs and refactoring, <PAGE>265</PAGE></H0>
<H0>Responsiveness</H0>
<H1>definition, <PAGE>395</PAGE></H1>
<H1>Google, <PAGE><I>397</I></PAGE></H1>
<H1>quantification, <PAGE><B>396</B></PAGE></H1>
<H0>REST, <XREF><I>see</I> Representational State Transfer (REST)</XREF></H0>
<H0>Reuse</H0>
<H1>declarative scenarios, <PAGE><I>237</I></PAGE></H1>
<H1>productivity improvement, <PAGE>16</PAGE></H1>
<H1>Rails, <PAGE>6</PAGE></H1>
<H0>ReviewsController, associations, <PAGE>154</PAGE></H0>
<H0>Revision Control System (RCS), <PAGE>355</PAGE></H0>
<H0>RightScale, <PAGE>397</PAGE></H0>
<H0>Risk analysis, plan-and-document, <PAGE>244</PAGE></H0>
<H0>Risk management, plan-and-document, <PAGE>244</PAGE></H0>
<H0>Ritchie, Dennis, <PAGE><I>40</I></PAGE></H0>
<H0>Rivest, Ronald, <PAGE><I>414</I></PAGE></H0>
<H0>Rolling reboot, <PAGE>404</PAGE></H0>
<H0>Root class, Ruby objects, <PAGE>74</PAGE></H0>
<H0>Root zone, <PAGE><I>45</I></PAGE></H0>
<H0>Rotten Potatoes</H0>
<H1>AJAX Jasmine specs, <PAGE><I>195</I></PAGE></H1>
<H1>associations, <PAGE>147</PAGE></H1>
<H1>BDD, <PAGE>217</PAGE></H1>
<H1>client-server architecture, <PAGE>42</PAGE></H1>
<H1>commit example, <PAGE><I>340</I></PAGE></H1>
<H1>Cucumber scenario, <PAGE>224, <I>224</I></PAGE></H1>
<H1>Demeter Principle, <PAGE>382</PAGE></H1>
<H1>DIP, <PAGE>378</PAGE></H1>
<H1>DOM, <PAGE><I>177</I></PAGE></H1>
<H1>enhancement, <PAGE><B>230</B></PAGE></H1>
<H1>form submission, <PAGE><I>121</I></PAGE></H1>
<H1>JavaScript features, <PAGE><I>167</I></PAGE></H1>
<H1>jQuery example, <PAGE><I>182</I></PAGE></H1>
<H1>Lo-Fi UI, <PAGE><I>228</I></PAGE></H1>
<H1>migrations, <PAGE>400</PAGE></H1>
<H1>movie creation, <PAGE><I>60</I></PAGE></H1>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H1>records, <PAGE>57</PAGE></H1>
<H1>release branch example, <PAGE><I>341</I></PAGE></H1>
<H1>routes, <PAGE><I>60</I></PAGE></H1>
<H1>RSpec, <PAGE>259</PAGE></H1>
<H1>scenario comparisons, <PAGE>236</PAGE></H1>
<H1>storyboard, <PAGE><I>229</I></PAGE></H1>
<H1>third-party authentication, <PAGE>142</PAGE></H1>
<H1>tiers, <PAGE>51</PAGE></H1>
<H1>views, <PAGE>54</PAGE></H1>
<H0>Routes</H0>
<H1>associations, <PAGE><B>154</B></PAGE></H1>
<H1>examples, <PAGE><I>60</I></PAGE></H1>
<H1>:format, <PAGE><I>62</I></PAGE></H1>
<H1>helpers via metaprogramming, <PAGE><I>113</I></PAGE></H1>
<H1>nested, <PAGE><I>155</I></PAGE></H1>
<H1>non-resource-based, <PAGE><I>103</I></PAGE></H1>
<H1>overview, <PAGE><B>59</B></PAGE></H1>
<H1>Rails basics, <PAGE>102</PAGE></H1>
<H1>wildcard tokens, <PAGE><I>104</I></PAGE></H1>
<H0>RPM, <XREF><I>see</I> Remote Performance Monitoring (RPM)</XREF></H0>
<H0>RSA algorithm, <PAGE><I>414,</I> 415</PAGE></H0>
<H0>RSpec</H0>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>bug testing, <PAGE>344</PAGE></H1>
<H1>example, <PAGE><I>260</I></PAGE></H1>
<H1>example development, <PAGE><I>262</I></PAGE></H1>
<H1>expectations, <PAGE><I>281</I></PAGE></H1>
<H1>function, <PAGE>270</PAGE></H1>
<H1>integration tests, <PAGE><I>259</I></PAGE></H1>
<H1>JavaScript and AJAX testing, <PAGE>190</PAGE></H1>
<H1>method listing, <PAGE><I>280,</I> <I>281</I></PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>264</PAGE></H1>
<H1>response, <PAGE>265</PAGE></H1>
<H1>setting up, <PAGE><I>191</I></PAGE></H1>
<H1>testing tools relationship, <PAGE><I>248</I></PAGE></H1>
<H0>ruby-debug, <PAGE><I>260</I></PAGE></H0>
<H0>ruby-debug19, <PAGE>102</PAGE></H0>
<H0>Rubygems, <PAGE>100, <B>256</B></PAGE></H0>
<H0>RubyMine, <PAGE>445</PAGE></H0>
<H0>Ruby on Rails basics, <XREF><I>see also</I> Rails concepts</XREF></H0>
<H1>advantages, <PAGE>5</PAGE></H1>
<H1>AOP support, <PAGE><I>141</I></PAGE></H1>
<H1>blocks, <PAGE><B>84</B></PAGE></H1>
<H1>classes, methods, inheritance, <PAGE><B>78</B></PAGE></H1>
<H1>debugger, <PAGE><I>123</I></PAGE></H1>
<H1>design pattern expression, <PAGE><I>385</I></PAGE></H1>
<H1>dynamic language features, <PAGE><I>271</I></PAGE></H1>
<H1>elements and control structures, <PAGE><I>71</I></PAGE></H1>
<H1>GoF design patterns, <PAGE><I>363</I></PAGE></H1>
<H1>IDEs, <PAGE>445</PAGE></H1>
<H1>idiomatic language, <PAGE><B>93</B></PAGE></H1>
<H1>iterators via yield, <PAGE><B>89</B></PAGE></H1>
<H1>Java programmers, <PAGE>92</PAGE></H1>
<H1>JavaScript, <PAGE><B>169,</B> <I>170</I></PAGE></H1>
<H1>metaprogramming, <PAGE><B>81,</B> <I>372</I></PAGE></H1>
<H1>mix-ins and duck typing, <PAGE><B>88</B></PAGE></H1>
<H1>objects, <PAGE><B>73</B></PAGE></H1>
<H1>observer pattern, <PAGE><I>384</I></PAGE></H1>
<H1>operation as method, <PAGE><B>75</B></PAGE></H1>
<H1>origins, <PAGE><I>66</I></PAGE></H1>
<H1>overview, <PAGE><B>70</B></PAGE></H1>
<H1>regular expressions, <PAGE><I>72</I></PAGE></H1>
<H1>scalability, <PAGE>64</PAGE></H1>
<H1>Smalltalk origins, <PAGE><I>432</I></PAGE></H1>
<H0>Rumbaugh, James, <PAGE><I>366</I></PAGE></H0>
<H0>RuntimeError, TMDb, <PAGE>273, 276, <I>278</I></PAGE></H0>
<H0>RUP, <XREF><I>see</I> Rational Unified Process (RUP)</XREF></H0>
</GROUP>
<GROUP><B>S</B>
<H0>S0 coverage, <PAGE>282</PAGE></H0>
<H0>S1 coverage, <PAGE>282</PAGE></H0>
<H0>SaaS, <XREF><I>see</I> Software as a Service (SaaS)</XREF></H0>
<H0>SaaS on Cloud Computing, Virtuous Triangle of Engineering SaaS, <PAGE><I>33,</I> <I>433</I></PAGE></H0>
<H0>Salesforce, <PAGE>399</PAGE></H0>
<H0>Same-origin policy, <PAGE><I>202</I></PAGE></H0>
<H0>SAMOSAS, team management, <PAGE>347</PAGE></H0>
<H0>sandbox method, Jasmine, <PAGE><I>197</I></PAGE></H0>
<H0>Sandwich integration, <PAGE>286</PAGE></H0>
<H0>Sanitization, Haml, <PAGE><I>112</I></PAGE></H0>
<H0>Sass, <PAGE>451</PAGE></H0>
<H0>save</H0>
<H1>associations, <PAGE>153</PAGE></H1>
<H1>Rails app example, <PAGE>108</PAGE></H1>
<H1>validation, <PAGE>138</PAGE></H1>
<H0>save!</H0>
<H1>associations, <PAGE>153</PAGE></H1>
<H1>Rails app example, <PAGE>109</PAGE></H1>
<H1>validation, <PAGE>138</PAGE></H1>
<H0>Scalability</H0>
<H1>cloud computing performance, <PAGE>422</PAGE></H1>
<H1>definition, <PAGE>395</PAGE></H1>
<H1>Rails, <PAGE>64</PAGE></H1>
<H1>RDBMS, <PAGE>64</PAGE></H1>
<H1>SaaS demands, <PAGE>11</PAGE></H1>
<H0>SCCS, <XREF><I>see</I> Source Code Control System (SCCS)</XREF></H0>
<H0>Scenario outlines, <PAGE><I>238</I></PAGE></H0>
<H0>Scenarios</H0>
<H1>comparison, <PAGE><B>236</B></PAGE></H1>
<H1>Cucumber, <PAGE>224, <I>224</I></PAGE></H1>
<H1>declarative, reuse, <PAGE><I>237</I></PAGE></H1>
<H1>requirements elicitation, <PAGE>239</PAGE></H1>
<H0>Scheduling</H0>
<H1>change management, <PAGE>244</PAGE></H1>
<H1>plan-and-document, <PAGE>242</PAGE></H1>
<H1>software projects, <PAGE>245</PAGE></H1>
<H0>Scheme</H0>
<H1>JavaScript origins, <PAGE><I>166</I></PAGE></H1>
<H1>URI, <PAGE>45</PAGE></H1>
<H0>SCM, <XREF><I>see</I> Software configuration management (SCM)</XREF></H0>
<H0>Scopes</H0>
<H1>filter criteria, <PAGE><I>158</I></PAGE></H1>
<H1>query composition, <PAGE><B>157</B></PAGE></H1>
<H0>Scoping, Pivotal Labs Agile cost estimation, <PAGE>223</PAGE></H0>
<H0>Scratch branch, legacy code exploration, <PAGE>301</PAGE></H0>
<H0>Scripting languages, productivity improvement, <PAGE>16</PAGE></H0>
<H0>Scrum, <PAGE><B>332,</B> xv</PAGE></H0>
<H0>ScrumMaster, <PAGE>333</PAGE></H0>
<H0>Seam, <PAGE><B>261</B></PAGE></H0>
<H1>definition, <PAGE>263</PAGE></H1>
<H1>dependency replacement, <PAGE><B>313</B></PAGE></H1>
<H1>language variations, <PAGE><I>265</I></PAGE></H1>
<H0>search_terms, Red&ndash;Green&ndash;Refactor TDD, <PAGE>262</PAGE></H0>
<H0>search_tmdb</H0>
<H1>code sample, <PAGE><I>268</I></PAGE></H1>
<H1>controller specs and refactoring, <PAGE>265</PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>261</PAGE></H1>
<H1>specs, <PAGE><I>268</I></PAGE></H1>
<H1>subject code, <PAGE>263</PAGE></H1>
<H1>TDD, <PAGE>259</PAGE></H1>
<H0>Secret, encryption, <PAGE>415</PAGE></H0>
<H0>Secret key, git hosting services, <PAGE>447</PAGE></H0>
<H0>Secure HTTP protocol (HTTPS)</H0>
<H1>bookware VM on EC2, <PAGE>444</PAGE></H1>
<H1>networking explanation, <PAGE><I>45</I></PAGE></H1>
<H1>secure platform fallacy, <PAGE>423</PAGE></H1>
<H0>Secure Sockets Layer (SSL)</H0>
<H1>data encryption, <PAGE>415</PAGE></H1>
<H1>decorators, <PAGE>375</PAGE></H1>
<H0>Security</H0>
<H1>customer data protection, <PAGE><B>414</B></PAGE></H1>
<H1>overview, <PAGE><B>424</B></PAGE></H1>
<H1>plan-and-document, <PAGE>420</PAGE></H1>
<H1>Rails defenses, <PAGE><I>418</I></PAGE></H1>
<H1>secure platform fallacy, <PAGE>423</PAGE></H1>
<H0>Seeding, <PAGE><I>109</I></PAGE></H0>
<H0>Selector notations, CSS, <PAGE><I>48,</I> <I>49</I></PAGE></H0>
<H0>Self</H0>
<H1>class method definition, <PAGE><I>80</I></PAGE></H1>
<H1>future-proofing example, <PAGE><I>81</I></PAGE></H1>
<H1>JavaScript prototype inheritance, <PAGE><I>176</I></PAGE></H1>
<H1>time arithmetic, <PAGE>82</PAGE></H1>
<H0>Sencha Touch, <PAGE>207</PAGE></H0>
<H0>send_email, <PAGE><I>375,</I> 379</PAGE></H0>
<H0>Send method, <PAGE>75</PAGE></H0>
<H0>Separator, Ruby blocks, <PAGE>84</PAGE></H0>
<H0>Serializing, <PAGE>57, <I>173,</I> 199</PAGE></H0>
<H0>Server certificate, authentication, <PAGE>142</PAGE></H0>
<H0>Server push, client pull comparison, <PAGE><I>47</I></PAGE></H0>
<H0>Server-side applications, JavaScript, <PAGE>166, <I>167</I></PAGE></H0>
<H0>Service level agreement (SLA), <PAGE><I>397</I></PAGE></H0>
<H0>Service level objective (SLO), <PAGE>397, <I>397</I></PAGE></H0>
<H0>Service Oriented Architecture (SOA)</H0>
<H1>associations, <PAGE><I>157</I></PAGE></H1>
<H1>basic concept, <PAGE><B>7</B></PAGE></H1>
<H1>bookstore service, <PAGE>8, <I>9</I></PAGE></H1>
<H1>continuous integration, <PAGE>399</PAGE></H1>
<H1>designing for, <PAGE><B>130</B></PAGE></H1>
<H1>Facebook Platform, <PAGE>7</PAGE></H1>
<H1>:format in routes, <PAGE><I>62</I></PAGE></H1>
<H1>REST, <PAGE>59, <I>61</I></PAGE></H1>
<H1>server performance, <PAGE>423</PAGE></H1>
<H1>SPAs, <PAGE>166</PAGE></H1>
<H1>Transform View, <PAGE><I>64</I></PAGE></H1>
<H0>Session</H0>
<H1>cookies, <PAGE>46</PAGE></H1>
<H1>RESTful association routes, <PAGE><I>157</I></PAGE></H1>
<H0>session[]</H0>
<H1>associations, <PAGE>154</PAGE></H1>
<H1>authentication, <PAGE>145</PAGE></H1>
<H1>characteristics, <PAGE><I>125</I></PAGE></H1>
<H1>overstuffing, <PAGE>129</PAGE></H1>
<H0>SessionsController, OmniAuth gem, <PAGE><I>144</I></PAGE></H0>
<H0>Severity 1 bugs, Amazon, <PAGE><I>344</I></PAGE></H0>
<H0>SGML, <XREF><I>see</I> Standard Generalized Markup Language (SGML)</XREF></H0>
<H0>SHA-1 algorithm, <PAGE><I>446</I></PAGE></H0>
<H0>Shamir, Adi, <PAGE><I>414</I></PAGE></H0>
<H0>Sharding</H0>
<H1>database scaling, <PAGE>426</PAGE></H1>
<H1>RDBMS scalability, <PAGE>64</PAGE></H1>
<H0>Shared-nothing architecture, three-tier, <PAGE><I>52</I></PAGE></H0>
<H0>Shared-repository, version control, <PAGE>336</PAGE></H0>
<H0>Short-lived code, <PAGE>13</PAGE></H0>
<H0>Shotgun problem solving, <PAGE><I>118</I></PAGE></H0>
<H0>Shotgun surgery, <PAGE><I>372</I></PAGE></H0>
<H0>should</H0>
<H1>RSpec, <PAGE>270</PAGE></H1>
<H1>TMDb, <PAGE>265</PAGE></H1>
<H0>should_not, TMDb, <PAGE>265</PAGE></H0>
<H0>should_receive</H0>
<H1>Red&ndash;Green&ndash;Refactor TDD, <PAGE>263</PAGE></H1>
<H1>TMDb, <PAGE>266</PAGE></H1>
<H0>show</H0>
<H1>AJAX, <PAGE>186</PAGE></H1>
<H1>caching, <PAGE><I>409</I></PAGE></H1>
<H1>controller method, <PAGE><I>114</I></PAGE></H1>
<H1>Rails app example, <PAGE>111</PAGE></H1>
<H0>Siloed software</H0>
<H1>bookstore service, <PAGE>8, <I>8</I></PAGE></H1>
<H1>SOA comparison, <PAGE>7</PAGE></H1>
<H0>SimpleCov, C0 coverage check, <PAGE><I>283</I></PAGE></H0>
<H0>Simple Object Access Protocol (SOAP), REST/WS-* comparison, <PAGE><I>62</I></PAGE></H0>
<H0>Simula, <PAGE>74, <I>134</I></PAGE></H0>
<H0>Sinatra, DataMapper, <PAGE><I>151</I></PAGE></H0>
<H0>Single-page applications (SPAs), <PAGE>166, <B>198,</B> <I>202</I></PAGE></H0>
<H0>Single Responsibility Principle (SRP), <PAGE><B>369</B></PAGE></H0>
<H0>Single sign-on (SSO)</H0>
<H1>Facebook, <PAGE><I>142</I></PAGE></H1>
<H1>side effects, <PAGE><I>146</I></PAGE></H1>
<H1>third-party authentication, <PAGE><B>142,</B> <I>142</I></PAGE></H1>
<H0>Sketches</H0>
<H1>Lo-Fi UI, <PAGE><B>227</B></PAGE></H1>
<H1>storyboard necessity, <PAGE>246</PAGE></H1>
<H0>SLA, <XREF><I>see</I> Service level agreement (SLA)</XREF></H0>
<H0>Slashdot, hits per day, <PAGE>422</PAGE></H0>
<H0>SLO, <XREF><I>see</I> Service level objective (SLO)</XREF></H0>
<H0>Slots, client-side JavaScript, <PAGE>169</PAGE></H0>
<H0>Smalltalk, <PAGE>74, <I>384,</I> <I>432</I></PAGE></H0>
<H0>Smart fuzzing, <PAGE>285</PAGE></H0>
<H0>SMART user stories, <PAGE><B>219</B></PAGE></H0>
<H0>SOA, <XREF><I>see</I> Service Oriented Architecture (SOA)</XREF></H0>
<H0>SOAP, <XREF><I>see</I> Simple Object Access Protocol (SOAP)</XREF></H0>
<H0>SOFA</H0>
<H1>definition, <PAGE>311</PAGE></H1>
<H1>method length, <PAGE><I>312</I></PAGE></H1>
<H1>overview, <PAGE><B>309</B></PAGE></H1>
<H0>Software as a Service (SaaS)</H0>
<H1>basic concept, <PAGE><B>4</B></PAGE></H1>
<H1>beautiful <I>vs.</I> legacy code, <PAGE><B>12</B></PAGE></H1>
<H1>cloud computing, <PAGE><B>10</B></PAGE></H1>
<H1>content rendering, <PAGE><I>50</I></PAGE></H1>
<H1>development processes, Agile Manifesto, <PAGE>24</PAGE></H1>
<H1>frameworks and languages, <PAGE>5</PAGE></H1>
<H1>important structures, <PAGE><I>43</I></PAGE></H1>
<H1>IT demands, <PAGE>10</PAGE></H1>
<H1>plan-and-document, <PAGE><B>18</B></PAGE></H1>
<H1>productivity, <PAGE><B>15</B></PAGE></H1>
<H1>SOA, <PAGE><B>7</B></PAGE></H1>
<H1>software engineering <I>vs.</I> programming, <PAGE><B>33</B></PAGE></H1>
<H1>testing, <PAGE><B>13</B></PAGE></H1>
<H0>Software configuration management (SCM), <PAGE>446</PAGE></H0>
<H0>Software Craftsmanship movement, <PAGE><I>365</I></PAGE></H0>
<H0>Software development processes</H0>
<H1>Agile Manifesto, <PAGE><B>24</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>18</B></PAGE></H1>
<H0>Software education, weaknesses, <PAGE>xiv</PAGE></H0>
<H0>Software engineering, coining of term, <PAGE>18</PAGE></H0>
<H0>Software evolution, causes, <PAGE>12</PAGE></H0>
<H0>Software metrics</H0>
<H1>common metrics, <PAGE><I>311</I></PAGE></H1>
<H1>definition, <PAGE>310</PAGE></H1>
<H1>monitoring, <PAGE>425</PAGE></H1>
<H1>overview, <PAGE><B>309</B></PAGE></H1>
<H1>plan-and-document, <PAGE>348</PAGE></H1>
<H1>rigid adherence, <PAGE>324</PAGE></H1>
<H0>Software projects</H0>
<H1>budget surveys, <PAGE><I>24</I></PAGE></H1>
<H1>management basics, <PAGE>355</PAGE></H1>
<H1>scheduling issues, <PAGE>245</PAGE></H1>
<H0>Software rejuvenation, <PAGE>404</PAGE></H0>
<H0>Software Requirements Specification (SRS)</H0>
<H1>design patterns, <PAGE>386</PAGE></H1>
<H1>IEEE Standard 830-1998, <PAGE><I>240</I></PAGE></H1>
<H1>plan-and-document, <PAGE>239</PAGE></H1>
<H1>plan-and-document and testing, <PAGE>286</PAGE></H1>
<H0>Software Wall of Shame, <PAGE>24</PAGE></H0>
<H0>SOLID</H0>
<H1>acronym variations, <PAGE><I>363</I></PAGE></H1>
<H1>basic concept, <PAGE><B>362</B></PAGE></H1>
<H1>definition, <PAGE>365</PAGE></H1>
<H1>design guidelines, <PAGE><I>365</I></PAGE></H1>
<H1>dynamic languages, <PAGE>387</PAGE></H1>
<H1>GoF design patterns, <PAGE><I>364</I></PAGE></H1>
<H1>ISP, <PAGE><I>371</I></PAGE></H1>
<H1>OCP, <PAGE>371</PAGE></H1>
<H1>SRP, <PAGE>369</PAGE></H1>
<H0>sort method, Enumerable, <PAGE>88</PAGE></H0>
<H0>Source code control, <PAGE>446</PAGE></H0>
<H0>Source Code Control System (SCCS), <PAGE>355</PAGE></H0>
<H0>Spaceship operator, <PAGE><I>88</I></PAGE></H0>
<H0>SPAs, <XREF><I>see</I> Single-page applications (SPAs)</XREF></H0>
<H0>Specific, SMART user stories, <PAGE>219</PAGE></H0>
<H0>Spiral lifecycle</H0>
<H1>Agile lifecycle, <PAGE><I>436</I></PAGE></H1>
<H1>design/code reviews, <PAGE>348</PAGE></H1>
<H1>overview, <PAGE><I>20</I></PAGE></H1>
<H1>plan-and-document, <PAGE>19</PAGE></H1>
<H1>productivity comparisons, <PAGE><I>28</I></PAGE></H1>
<H1>RUP, <PAGE>21</PAGE></H1>
<H1>tasks, <PAGE>239</PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H0>Sprint, Scrum, <PAGE>332</PAGE></H0>
<H0>spyOn, <PAGE>192, <I>194</I></PAGE></H0>
<H0>SQL, <XREF><I>see</I> Structured Query Language (SQL)</XREF></H0>
<H0>SQL injection</H0>
<H1>characteristics, <PAGE>416</PAGE></H1>
<H1>code example, <PAGE><I>416</I></PAGE></H1>
<H1>fuzz testing, <PAGE>286</PAGE></H1>
<H1>niche apps, <PAGE>424</PAGE></H1>
<H1>Rails app example, <PAGE>108</PAGE></H1>
<H0>SQLite3, Rails basics, <PAGE>100, 104</PAGE></H0>
<H0>Square</H0>
<H1>duck typing, <PAGE>378</PAGE></H1>
<H1>LSP, <PAGE>376</PAGE></H1>
<H0>SRP, <XREF><I>see</I> Single Responsibility Principle (SRP)</XREF></H0>
<H0>SRS, <XREF><I>see</I> Software Requirements Specification (SRS)</XREF></H0>
<H0>ssh-keygen, <PAGE><I>415</I></PAGE></H0>
<H0>SSL, <XREF><I>see</I> Secure Sockets Layer (SSL)</XREF></H0>
<H0>SSL certificate, <PAGE>415</PAGE></H0>
<H0>SSO, <XREF><I>see</I> Single sign-on (SSO)</XREF></H0>
<H0>Staging site, <PAGE><I>400</I></PAGE></H0>
<H0>Stallman, Richard, <PAGE><I>444,</I> 445</PAGE></H0>
<H0>Standard Generalized Markup Language (SGML), <PAGE><I>48</I></PAGE></H0>
<H0>Stateless protocol</H0>
<H1>HTTP, <PAGE>46</PAGE></H1>
<H1>three-tier architecture, <PAGE><I>52</I></PAGE></H1>
<H0>Statement coverage (C0)</H0>
<H1>check with SimpleCov, <PAGE><I>283</I></PAGE></H1>
<H1>definition, <PAGE>282</PAGE></H1>
<H1>example, <PAGE><I>307</I></PAGE></H1>
<H0>Static variable, Java <I>vs.</I> Ruby, <PAGE>79</PAGE></H0>
<H0>Step definitions</H0>
<H1>Cucumber, <PAGE>224</PAGE></H1>
<H1>Cucumber and Capybara, <PAGE>226</PAGE></H1>
<H1>domain language, <PAGE>236</PAGE></H1>
<H0>Storyboards</H0>
<H1>Lo-Fi UI, <PAGE><B>227</B></PAGE></H1>
<H1>Rotten Potatoes, <PAGE><I>229,</I> 231</PAGE></H1>
<H1>sketches without, <PAGE>246</PAGE></H1>
<H1>TMDb UI, <PAGE><I>232</I></PAGE></H1>
<H0>Strategy, OmniAuth gem, <PAGE>143</PAGE></H0>
<H0>Strategy pattern</H0>
<H1>OCP, <PAGE>371</PAGE></H1>
<H1>OmniAuth, <PAGE>373</PAGE></H1>
<H0>Stress, continuous integration, <PAGE>399</PAGE></H0>
<H0>Stress testing, monitoring, <PAGE>406</PAGE></H0>
<H0>String</H0>
<H1>JavaScript, <PAGE>206</PAGE></H1>
<H1>symbol comparison, <PAGE><I>103</I></PAGE></H1>
<H1>symbol interchangeability, <PAGE>93</PAGE></H1>
<H0>String class</H0>
<H1>Ruby objects, <PAGE>73</PAGE></H1>
<H1>type casting, <PAGE>75</PAGE></H1>
<H0>String literals, JavaScript, <PAGE>206</PAGE></H0>
<H0>Stripe, <PAGE>417</PAGE></H0>
<H0>Structural patterns, GoF, <PAGE><I>364</I></PAGE></H0>
<H0>Structure diagrams, UML, <PAGE><I>367</I></PAGE></H0>
<H0>Structured processes, <PAGE><I>21</I></PAGE></H0>
<H0>Structured Query Language (SQL)</H0>
<H1>associations, <PAGE>148</PAGE></H1>
<H1>EXPLAIN, <PAGE><I>414</I></PAGE></H1>
<H0>Structured storage, <PAGE>57</PAGE></H0>
<H0>stub</H0>
<H1>example, <PAGE><I>194</I></PAGE></H1>
<H1>Jasmine, <PAGE>192</PAGE></H1>
<H1>TMDb, <PAGE><B>265</B></PAGE></H1>
<H0>Stubbing</H0>
<H1>Internet, AJAX, <PAGE><I>202</I></PAGE></H1>
<H1>Internet for TMDb, <PAGE><B>276</B></PAGE></H1>
<H1>testing issues, <PAGE>290</PAGE></H1>
<H0>Style sheets, programming languages, <PAGE><I>333</I></PAGE></H0>
<H0>Subject code, Red&ndash;Green&ndash;Refactor TDD, <PAGE>263</PAGE></H0>
<H0>submit, JavaScript, <PAGE>183</PAGE></H0>
<H0>Subversion, <PAGE><I>336,</I> 355, <I>446</I></PAGE></H0>
<H0>success handler function, <PAGE><I>202</I></PAGE></H0>
<H0>Symantec, <PAGE><I>417</I></PAGE></H0>
<H0>Symbol</H0>
<H1>Ruby overview, <PAGE>70</PAGE></H1>
<H1>string comparison, <PAGE><I>103</I></PAGE></H1>
<H1>string interchangeability, <PAGE>93</PAGE></H1>
<H0>Symmetric-key cryptography, <PAGE>415</PAGE></H0>
<H0>Syntactic sugar, method calls, <PAGE>75, <I>76</I></PAGE></H0>
<H0>Syntax errors, debugging, <PAGE>119</PAGE></H0>
<H0>Synthesis, productivity improvement, <PAGE>16</PAGE></H0>
<H0>System building, <PAGE>351</PAGE></H0>
<H0>System testing, software, <PAGE>14</PAGE></H0>
</GROUP>
<GROUP><B>T</B>
<H0>Tables, RDBMS, <PAGE>57, <I>57</I></PAGE></H0>
<H0>Table scan, databases, <PAGE>412</PAGE></H0>
<H0>Task-parallel programming, event-driven comparison, <PAGE><I>190</I></PAGE></H0>
<H0>TCP/IP, <XREF><I>see</I> Transmission Control Protocol/Internet Protocol (TCP/IP)</XREF></H0>
<H0>TDD, <XREF><I>see</I> Test-driven development (TDD)</XREF></H0>
<H0>Teams</H0>
<H1>dividing workload, <PAGE>354</PAGE></H1>
<H1>overview, <PAGE><B>354</B></PAGE></H1>
<H1>plan-and-document, <PAGE>347</PAGE></H1>
<H1>Scrum, <PAGE>333</PAGE></H1>
<H0>Teardown, RSpec, <PAGE>264</PAGE></H0>
<H0>Template Method pattern</H0>
<H1>delegation, <PAGE><I>373</I></PAGE></H1>
<H1>OCP, <PAGE>371</PAGE></H1>
<H0>Template View</H0>
<H1>alternatives, <PAGE><I>64</I></PAGE></H1>
<H1>index RESTful action, <PAGE><I>112</I></PAGE></H1>
<H1>MVC, <PAGE>54</PAGE></H1>
<H1>overview, <PAGE><B>62</B></PAGE></H1>
<H1>web app comparison, <PAGE><I>55</I></PAGE></H1>
<H0>Test coverage</H0>
<H1>definition, <PAGE>14</PAGE></H1>
<H1>&quot;no bug&quot; fallacies, <PAGE>290</PAGE></H1>
<H1>pass before shipment, <PAGE>290</PAGE></H1>
<H0>Test-driven development (TDD)</H0>
<H1>Agile, <PAGE>25, xv</PAGE></H1>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>continuous refactoring, <PAGE>325</PAGE></H1>
<H1>conventional debugging comparison, <PAGE><B>291</B></PAGE></H1>
<H1>JavaScript, <PAGE>168</PAGE></H1>
<H1>JavaScript and AJAX testing, <PAGE>190</PAGE></H1>
<H1>legacy code, <PAGE>300</PAGE></H1>
<H1>overview, <PAGE><I>256,</I> <B>258</B></PAGE></H1>
<H1>Red&ndash;Green&ndash;Refactor, <PAGE><I>261</I></PAGE></H1>
<H1>TMDb, <PAGE>231, 234, 272</PAGE></H1>
<H1>user stories, <PAGE>217</PAGE></H1>
<H0>Testing</H0>
<H1>Agile <I>vs.</I> plan-and-document, <PAGE><I>27</I></PAGE></H1>
<H1>approaches and terminology, <PAGE><B>284</B></PAGE></H1>
<H1>before/after coding, <PAGE>291</PAGE></H1>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>client-side form validation, <PAGE><I>197</I></PAGE></H1>
<H1>exhaustive, <PAGE><I>14</I></PAGE></H1>
<H1>Google, <PAGE><I>249</I></PAGE></H1>
<H1>JavaScript and AJAX, <PAGE><B>190</B></PAGE></H1>
<H1>method comparison, <PAGE><I>284</I></PAGE></H1>
<H1>over-stubbing issues, <PAGE>290</PAGE></H1>
<H1>pending specs, <PAGE><I>308</I></PAGE></H1>
<H1>plan-and-document <I>vs.</I> Agile, <PAGE><I>289</I></PAGE></H1>
<H1>plan-and-document perspective, <PAGE><B>286</B></PAGE></H1>
<H1>QA, <PAGE><B>13</B></PAGE></H1>
<H1>reliance on test type, <PAGE>290</PAGE></H1>
<H1>security, <PAGE>421</PAGE></H1>
<H1>test code amount, <PAGE>290</PAGE></H1>
<H1>tools relationship, <PAGE><I>248</I></PAGE></H1>
<H1>verification/validation approaches, <PAGE>14</PAGE></H1>
<H0>Then, Cucumber keyword, <PAGE>224</PAGE></H0>
<H0>The Open Movie Database (TMDb)</H0>
<H1>add movie example, <PAGE><I>233</I></PAGE></H1>
<H1>API, <PAGE><B>256</B></PAGE></H1>
<H1>code example, <PAGE><I>234</I></PAGE></H1>
<H1>DRY code, <PAGE><I>235</I></PAGE></H1>
<H1>expectations, mocks, stubs, setup, teardown, <PAGE><B>265</B></PAGE></H1>
<H1>FIRST, TDD, RSpec, <PAGE><B>258</B></PAGE></H1>
<H1>fixtures and factories, <PAGE><B>269</B></PAGE></H1>
<H1>Haml code, <PAGE><I>233</I></PAGE></H1>
<H1>implicit requirements, <PAGE><B>272</B></PAGE></H1>
<H1>stubbing the Internet, <PAGE><B>276</B></PAGE></H1>
<H1>TDD cycle, <PAGE><B>261</B></PAGE></H1>
<H1>UI storyboard, <PAGE><I>232</I></PAGE></H1>
<H1>user stories/Lo-Fi UI example, <PAGE>230</PAGE></H1>
<H0>Therac-25, <PAGE>4</PAGE></H0>
<H0>Third-party authentication, SSO, <PAGE><B>142,</B> <I>142</I></PAGE></H0>
<H0>37 signals, <PAGE><I>66</I></PAGE></H0>
<H0>this keyword</H0>
<H1>incorrect use, <PAGE>204</PAGE></H1>
<H1>JavaScript, <PAGE>174, 182</PAGE></H1>
<H0>Thompson, Ken, <PAGE><I>40</I></PAGE></H0>
<H0>Three-tier architecture</H0>
<H1>caching, <PAGE>407</PAGE></H1>
<H1>cloud computing performance, <PAGE>422</PAGE></H1>
<H1>overview, <PAGE><B>51,</B> <I>52,</I> <I>53</I></PAGE></H1>
<H0>Through-associations, <PAGE><B>152,</B> <I>152</I></PAGE></H0>
<H0>Throughput, responsiveness, <PAGE>396</PAGE></H0>
<H0>Tiger team, <PAGE>421</PAGE></H0>
<H0>Timeboxed, SMART user stories, <PAGE>219</PAGE></H0>
<H0>Time class</H0>
<H1>arithmetic operations, <PAGE>81, <I>82</I></PAGE></H1>
<H1>duck typing, <PAGE><I>89</I></PAGE></H1>
<H1>Rails app example, <PAGE>108</PAGE></H1>
<H0>timeout handler function, <PAGE><I>202</I></PAGE></H0>
<H0>Timeouts, performance protection, <PAGE><I>424</I></PAGE></H0>
<H0>TimeSetter, <PAGE><I>307,</I> 316</PAGE></H0>
<H0>TLS, <XREF><I>see</I> Transport Layer Security (TLS)</XREF></H0>
<H0>TMDb, <XREF><I>see</I> The Open Movie Database (TMDb)</XREF></H0>
<H0>Tom Knight and the Lisp Machine, <PAGE><I>118</I></PAGE></H0>
<H0>Top-down integration, <PAGE>286</PAGE></H0>
<H0>Torvalds, Linus, <PAGE><I>444,</I> <I>446</I></PAGE></H0>
<H0>Tracked files, Git basics, <PAGE>446</PAGE></H0>
<H0>Transform View, template view alternatives, <PAGE><I>64</I></PAGE></H0>
<H0>Transition, RUP phase, <PAGE>21</PAGE></H0>
<H0>Transmission Control Protocol/Internet Protocol (TCP/IP)</H0>
<H1>communication, <PAGE>44</PAGE></H1>
<H1>early work, <PAGE><I>44</I></PAGE></H1>
<H1>port numbers, <PAGE>45</PAGE></H1>
<H0>Transport Layer Security (TLS), <PAGE>415</PAGE></H0>
<H0>trigger, JavaScript custom events, <PAGE><I>185</I></PAGE></H0>
<H0>TurboTax Online, <PAGE>5, 432</PAGE></H0>
<H0>Turing Award</H0>
<H1>Adleman, Leonard, <PAGE><I>414</I></PAGE></H1>
<H1>Allen, Frances, <PAGE><I>440</I></PAGE></H1>
<H1>Backus, John, <PAGE><I>16</I></PAGE></H1>
<H1>Brooks, Fred, Jr., <PAGE>19, <I>330</I></PAGE></H1>
<H1>Cerf, Vinton E. &quot;Vint,&quot; <PAGE><I>44</I></PAGE></H1>
<H1>Codd, Edgar F. &quot;Ted,&quot; <PAGE><I>57</I></PAGE></H1>
<H1>Dahl, Ole-Johan, <PAGE><I>134</I></PAGE></H1>
<H1>Dijkstra, Edsger W., <PAGE><I>287</I></PAGE></H1>
<H1>Gray, Jim, <PAGE><I>68</I></PAGE></H1>
<H1>Hoare, Charles Antony Richard, <PAGE><I>98</I></PAGE></H1>
<H1>Kahan, William, <PAGE><I>360</I></PAGE></H1>
<H1>Kahn, Bob, <PAGE><I>44</I></PAGE></H1>
<H1>Kay, Alan, <PAGE><I>432</I></PAGE></H1>
<H1>Knuth, Donald, <PAGE><I>254</I></PAGE></H1>
<H1>Lampson, Butler, <PAGE><I>296</I></PAGE></H1>
<H1>Liskov, Barbara, <PAGE><I>392</I></PAGE></H1>
<H1>McCarthy, John, <PAGE><I>10</I></PAGE></H1>
<H1>Nygaard, Kristen, <PAGE><I>134</I></PAGE></H1>
<H1>Perlis, Alan, <PAGE><I>164</I></PAGE></H1>
<H1>Ritchie, Dennis, <PAGE><I>40</I></PAGE></H1>
<H1>Rivest, Ronald, <PAGE><I>414</I></PAGE></H1>
<H1>Shamir, Adi, <PAGE><I>414</I></PAGE></H1>
<H1>Thompson, Ken, <PAGE><I>40</I></PAGE></H1>
<H1>Wilkes, Maurice, Sir, <PAGE><I>2</I></PAGE></H1>
<H1>Wirth, Niklaus, <PAGE><I>214</I></PAGE></H1>
<H0>Twitter</H0>
<H1>authentication, <PAGE>142, <I>144</I></PAGE></H1>
<H1>Big Brother Bird, <PAGE>425</PAGE></H1>
<H1>OAuth, <PAGE><I>142</I></PAGE></H1>
<H1>OmniAuth, <PAGE>145</PAGE></H1>
<H1>pair programming, <PAGE>335</PAGE></H1>
<H1>Rails applications, <PAGE>6</PAGE></H1>
<H0>Two-pizza teams, <PAGE><B>332,</B> <B>336</B></PAGE></H0>
<H0>Type casting, method calls, <PAGE>75</PAGE></H0>
</GROUP>
<GROUP><B>U</B>
<H0>UI, <XREF><I>see</I> User interface (UI)</XREF></H0>
<H0>UML, <XREF><I>see</I> Unified Modeling Language (UML)</XREF></H0>
<H0>UMPLE, <PAGE><I>368</I></PAGE></H0>
<H0>Undeclared exceptions, <PAGE><I>275</I></PAGE></H0>
<H0>Undefined method, Ruby objects, <PAGE>74</PAGE></H0>
<H0>Undisciplined process, Agile as, <PAGE><I>25</I></PAGE></H0>
<H0>Unified Modeling Language (UML)</H0>
<H1>ActiveRecord <I>vs.</I> DataMapper, <PAGE><I>151</I></PAGE></H1>
<H1>associations, <PAGE>147</PAGE></H1>
<H1>class diagram, <PAGE><I>367,</I> <I>371,</I> <I>377</I></PAGE></H1>
<H1>diagram descriptions, <PAGE><I>367</I></PAGE></H1>
<H1>legacy code exploration, <PAGE>302, <I>303</I></PAGE></H1>
<H1>over-reliance on, <PAGE>387</PAGE></H1>
<H1>overview, <PAGE><B>366</B></PAGE></H1>
<H1>usage decisions, <PAGE><I>368</I></PAGE></H1>
<H1>use case diagram, <PAGE><I>218</I></PAGE></H1>
<H0>Uniform Resource Identifier (URI)</H0>
<H1>AJAX XHR, <PAGE><I>187,</I> 188</PAGE></H1>
<H1>before-filters, <PAGE><I>156</I></PAGE></H1>
<H1>CSRF, <PAGE>416</PAGE></H1>
<H1>definition, <PAGE>45</PAGE></H1>
<H1>FakeWeb, <PAGE>278</PAGE></H1>
<H1>fuzz testing, <PAGE>286</PAGE></H1>
<H1>httperf, <PAGE>406</PAGE></H1>
<H1>HTTP request, <PAGE><I>45,</I> 59</PAGE></H1>
<H1>nested routes, <PAGE><I>155</I></PAGE></H1>
<H1>params hash, <PAGE><I>104</I></PAGE></H1>
<H1>post-receive, GitHub, <PAGE>399</PAGE></H1>
<H1>Rails app example, <PAGE><I>114,</I> 126</PAGE></H1>
<H1>Rails basics, <PAGE>100, 102</PAGE></H1>
<H1>route helpers, <PAGE><I>113</I></PAGE></H1>
<H1>routes, <PAGE><I>60</I></PAGE></H1>
<H1>TMDb API key, <PAGE>257</PAGE></H1>
<H1>URL comparison, <PAGE><I>45</I></PAGE></H1>
<H0>Uniform Resource Locators (URL)</H0>
<H1>AJAX XHR, <PAGE><I>187</I></PAGE></H1>
<H1>Jasmine, <PAGE>196</PAGE></H1>
<H1>URI comparison, <PAGE><I>45</I></PAGE></H1>
<H0>Unit testing</H0>
<H1>bugs, <PAGE>344</PAGE></H1>
<H1>characterization tests, <PAGE>306</PAGE></H1>
<H1>Cucumber, <PAGE>226</PAGE></H1>
<H1>integration test comparison, <PAGE><B>282</B></PAGE></H1>
<H1>software, <PAGE>14</PAGE></H1>
<H1>testing method comparison, <PAGE><I>284</I></PAGE></H1>
<H0>Universal clients, web browser, <PAGE>42</PAGE></H0>
<H0>Unix</H0>
<H1>coursework skills, <PAGE><B>445</B></PAGE></H1>
<H1>fuzz testing, <PAGE>285</PAGE></H1>
<H1>inventors, <PAGE><I>40</I></PAGE></H1>
<H1>Linux origins, <PAGE>443</PAGE></H1>
<H1>time representation, <PAGE><I>82</I></PAGE></H1>
<H1>tools on OS X/Windows, <PAGE><I>447</I></PAGE></H1>
<H0>Unmarshalling, <PAGE>57</PAGE></H0>
<H0>Unobtrusiveness, JavaScript, <PAGE>167</PAGE></H0>
<H0>update</H0>
<H1>JavaScript custom events, <PAGE><I>185</I></PAGE></H1>
<H1>Rails app example, <PAGE><B>125,</B> <I>126</I></PAGE></H1>
<H1>replacement for, <PAGE><I>138</I></PAGE></H1>
<H0>update_attributes</H0>
<H1>Rails app example, <PAGE>109</PAGE></H1>
<H1>validation, <PAGE>138</PAGE></H1>
<H0>update_attributes!, validation, <PAGE>138</PAGE></H0>
<H0>URI, <XREF><I>see</I> Uniform Resource Identifier (URI)</XREF></H0>
<H0>URL, <XREF><I>see</I> Uniform Resource Locators (URL)</XREF></H0>
<H0>Use-case analysis, <PAGE><I>218</I></PAGE></H0>
<H0>Use case diagram</H0>
<H1>definition, <PAGE><I>218</I></PAGE></H1>
<H1>UML, <PAGE><I>367</I></PAGE></H1>
<H0>Use cases, requirements elicitation, <PAGE>239</PAGE></H0>
<H0>User interface (UI), Lo-Fi UI, <PAGE><B>227</B></PAGE></H0>
<H0>User stories</H0>
<H1>Agile, <PAGE>25</PAGE></H1>
<H1>BDD pros and cons, <PAGE>249</PAGE></H1>
<H1>case analysis, <PAGE><I>218</I></PAGE></H1>
<H1>Cucumber and Capybara, <PAGE><B>224,</B> <B>226</B></PAGE></H1>
<H1>overview, <PAGE><B>216</B></PAGE></H1>
<H1>plan-and-document, <PAGE><B>238</B></PAGE></H1>
<H1>points, velocity, Pivotal Tracker, <PAGE><B>220</B></PAGE></H1>
<H1>scenario comparisons, <PAGE>236</PAGE></H1>
<H1>SMART user stories, <PAGE><B>219</B></PAGE></H1>
<H1>TMDb example, <PAGE>230</PAGE></H1>
<H0>US National Vulnerabilities Database, <PAGE>426</PAGE></H0>
<H0>Utility computing, <PAGE>11</PAGE></H0>
</GROUP>
<GROUP><B>V</B>
<H0>Validation</H0>
<H1>action substitution, <PAGE>138</PAGE></H1>
<H1>ActiveModel, predefined, <PAGE><I>137</I></PAGE></H1>
<H1>associations, <PAGE>153</PAGE></H1>
<H1>BDD, <PAGE>217</PAGE></H1>
<H1>controller/view interactions, <PAGE><I>139</I></PAGE></H1>
<H1>IEEE 1012-2012, <PAGE><I>350</I></PAGE></H1>
<H1>plan-and-document, <PAGE>349</PAGE></H1>
<H1>software quality, <PAGE>14</PAGE></H1>
<H0>var, JavaScript, <PAGE>205</PAGE></H0>
<H0>Variable naming</H0>
<H1>guidelines, <PAGE><I>312</I></PAGE></H1>
<H1>issues, <PAGE>93</PAGE></H1>
<H0>VBScript, <PAGE><I>417</I></PAGE></H0>
<H0>VCSs, <XREF><I>see</I> Version control systems (VCSs)</XREF></H0>
<H0>Velocity</H0>
<H1>Agile, <PAGE>25</PAGE></H1>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>BDD pros and cons, <PAGE>249</PAGE></H1>
<H1>plan-and-document, <PAGE>238</PAGE></H1>
<H1>user stories, <PAGE><B>220</B></PAGE></H1>
<H0>Verification</H0>
<H1>BDD, <PAGE>217</PAGE></H1>
<H1>IEEE 1012-2012, <PAGE><I>350</I></PAGE></H1>
<H1>plan-and-document, <PAGE>349</PAGE></H1>
<H1>software quality, <PAGE>14</PAGE></H1>
<H0>VeriSign, <PAGE>415</PAGE></H0>
<H0>Version compatibility, continuous integration, <PAGE>399</PAGE></H0>
<H0>Version control</H0>
<H1>Git basics, <PAGE><B>446</B></PAGE></H1>
<H1>history, <PAGE><B>354</B></PAGE></H1>
<H1>merge conflicts, <PAGE><B>336</B></PAGE></H1>
<H0>Version control systems (VCSs)</H0>
<H1>automation, <PAGE>17</PAGE></H1>
<H1>early VCSs, <PAGE><I>336</I></PAGE></H1>
<H1>Git basics, <PAGE>446</PAGE></H1>
<H0>Version management, <PAGE>351</PAGE></H0>
<H0>vi, <PAGE><I>445</I></PAGE></H0>
<H0>Views</H0>
<H1>example development, <PAGE><I>262</I></PAGE></H1>
<H1>fat, <PAGE>129</PAGE></H1>
<H1>MVC, <PAGE>54</PAGE></H1>
<H1>Rails app example, <PAGE><B>111</B></PAGE></H1>
<H1>validation interactions, <PAGE><I>139</I></PAGE></H1>
<H0>vim, <PAGE><I>445</I></PAGE></H0>
<H0>VirtualBox, <PAGE><B>443</B></PAGE></H0>
<H0>Virtual Case File, <PAGE>4</PAGE></H0>
<H0>Virtual machine (VM) networking</H0>
<H1>NAT, <PAGE><I>444</I></PAGE></H1>
<H1>resetting, <PAGE>453</PAGE></H1>
<H0>Virtual machines (VM)</H0>
<H1>bookware image, <PAGE>100, 442, <B>443,</B> <B>444</B></PAGE></H1>
<H1>client-server architecture, <PAGE>42</PAGE></H1>
<H1>datacenters, <PAGE>11</PAGE></H1>
<H0>Virtual Private Server (VPS), <PAGE>394</PAGE></H0>
<H0>Virtuous Triangle of Engineering SaaS, <PAGE><I>33,</I> <I>433</I></PAGE></H0>
<H0>Viscosity, SOLID, <PAGE>365</PAGE></H0>
<H0>Visitor pattern, expression, <PAGE><I>385</I></PAGE></H0>
<H0>VM, <XREF><I>see</I> Virtual machines (VM)</XREF></H0>
<H0>Voucher class, CRC card, <PAGE><I>305</I></PAGE></H0>
<H0>VPS, <XREF><I>see</I> Virtual Private Server (VPS)</XREF></H0>
</GROUP>
<GROUP><B>W</B>
<H0>W3C, <XREF><I>see</I> World Wide Web Consortium (W3C)</XREF></H0>
<H0>Warehouse Scale Computers, <PAGE>11</PAGE></H0>
<H0>Waterfall lifecycle</H0>
<H1>Agile lifecycle, <PAGE><I>436</I></PAGE></H1>
<H1>design/code reviews, <PAGE>348</PAGE></H1>
<H1>plan-and-document, <PAGE>19</PAGE></H1>
<H1>productivity comparisons, <PAGE><I>28</I></PAGE></H1>
<H1>RUP, <PAGE>21</PAGE></H1>
<H1>Spiral lifecycle, <PAGE><I>20</I></PAGE></H1>
<H1>tasks, <PAGE>239</PAGE></H1>
<H1>testing comparisons, <PAGE><I>27</I></PAGE></H1>
<H0>Web application frameworks</H0>
<H1>comparison, <PAGE><I>55</I></PAGE></H1>
<H1>databases, <PAGE><I>53</I></PAGE></H1>
<H1>Fielding's work, <PAGE>59</PAGE></H1>
<H1>three-tier architecture, <PAGE>51</PAGE></H1>
<H0>Web browsers</H0>
<H1>AJAX effectiveness, <PAGE>202</PAGE></H1>
<H1>client-server architecture, <PAGE>42</PAGE></H1>
<H1>communication, <PAGE>44</PAGE></H1>
<H1>content rendering, <PAGE><I>50</I></PAGE></H1>
<H1>continuous integration, <PAGE>399</PAGE></H1>
<H1>cookies, <PAGE>46</PAGE></H1>
<H1>Cucumber and Capybara, <PAGE>226</PAGE></H1>
<H1>HEAD, <PAGE><I>60</I></PAGE></H1>
<H1>JASPI, <PAGE>168</PAGE></H1>
<H1>JavaScript event handlers, <PAGE>181</PAGE></H1>
<H1>Rails basics, <PAGE>100</PAGE></H1>
<H1>REST, <PAGE>59</PAGE></H1>
<H1>Scheme, <PAGE><I>166</I></PAGE></H1>
<H0>WebCL, JavaScript, <PAGE>207</PAGE></H0>
<H0>Webdriver</H0>
<H1>Capybara, <PAGE><I>225</I></PAGE></H1>
<H1>testing tools relationship, <PAGE><I>248</I></PAGE></H1>
<H0>WEBrick, <PAGE>42</PAGE></H0>
<H1>Rails app example, <PAGE>104</PAGE></H1>
<H1>three-tier architecture, <PAGE>51</PAGE></H1>
<H0>Web servers</H0>
<H1>communication, <PAGE>44</PAGE></H1>
<H1>content rendering, <PAGE><I>50</I></PAGE></H1>
<H1>networking explanation, <PAGE><I>45</I></PAGE></H1>
<H1>three-tier architecture, <PAGE>51</PAGE></H1>
<H0>WebSockets, client pull <I>vs.</I> server push, <PAGE><I>47</I></PAGE></H0>
<H0>WebWorkers, <PAGE><I>190</I></PAGE></H0>
<H0>When</H0>
<H1>Cucumber keyword, <PAGE>224</PAGE></H1>
<H1>imperative <I>vs.</I> declarative scenarios, <PAGE>236</PAGE></H1>
<H0>where method, Rails app example, <PAGE>108</PAGE></H0>
<H0>White-box tests</H0>
<H1>definition, <PAGE>285</PAGE></H1>
<H1>software, <PAGE>14</PAGE></H1>
<H0>Whole-system tests, testing method comparison, <PAGE><I>284</I></PAGE></H0>
<H0>Wildcards</H0>
<H1>regular expressions, <PAGE>70</PAGE></H1>
<H1>routes, <PAGE><I>104</I></PAGE></H1>
<H0>Wilkes, Maurice, Sir, <PAGE><I>2</I></PAGE></H0>
<H0>window, JavaScript, <PAGE>177, 181</PAGE></H0>
<H0>Windows</H0>
<H1>Unix tools on, <PAGE><I>447</I></PAGE></H1>
<H1>VirtualBox, <PAGE>443</PAGE></H1>
<H0>Windows 95, release celebration, <PAGE><I>19</I></PAGE></H0>
<H0>Wirth, Niklaus, <PAGE><I>214</I></PAGE></H0>
<H0>Word processor, code editing, <PAGE>445</PAGE></H0>
<H0>Workflows, RUP, <PAGE>21</PAGE></H0>
<H0>Working software</H0>
<H1>fix <I>vs.</I> redesign, <PAGE>324</PAGE></H1>
<H1>maintenance, <PAGE>320</PAGE></H1>
<H0>World Wide Web Consortium (W3C), HTTP/HTML development, <PAGE><I>66</I></PAGE></H0>
<H0>WS-*, REST/SOAP, <PAGE><I>62</I></PAGE></H0>
</GROUP>
<GROUP><B>X</B>
<H0>XHR, <XREF><I>see</I> XmlHttpRequest (XHR)</XREF></H0>
<H0>XHTML, <XREF><I>see</I> eXtended HyperText Markup Language (XHTML)</XREF></H0>
<H0>XMing, <PAGE>444</PAGE></H0>
<H0>XML, <XREF><I>see</I> eXtensible Markup Language (XML)</XREF></H0>
<H0>XML Builder, blocks and metaprogramming, <PAGE><I>87</I></PAGE></H0>
<H0>XmlHttpRequest (XHR), <PAGE>185, <I>187</I></PAGE></H0>
<H0>XP, <XREF><I>see</I> Extreme Programming (XP)</XREF></H0>
<H0>XQuartz, <PAGE>444</PAGE></H0>
<H0>X server, <PAGE>444</PAGE></H0>
<H0>XSS, security issues, <PAGE><I>417</I></PAGE></H0>
<H0>X Window System, <PAGE><I>444</I></PAGE></H0>
</GROUP>
<GROUP><B>Y</B>
<H0>Yahoo</H0>
<H1>Mojito, <PAGE>207</PAGE></H1>
<H1>web portal, <PAGE>42</PAGE></H1>
<H0>YAML, <XREF><I>see</I> Yet Another Markup Language (YAML)</XREF></H0>
<H0>Yegge, Steve, <PAGE>7</PAGE></H0>
<H0>Yet Another Markup Language (YAML)</H0>
<H1>fixtures, <PAGE>270, <I>270</I></PAGE></H1>
<H1>structured data, <PAGE><I>173</I></PAGE></H1>
<H0>Yield</H0>
<H1>around-filters, <PAGE>140</PAGE></H1>
<H1>example, <PAGE><I>90</I></PAGE></H1>
<H1>iterators from, <PAGE><B>89</B></PAGE></H1>
<H1>Rails reuse, <PAGE>6</PAGE></H1>
<H1>Ruby <I>vs.</I> operating systems, <PAGE><I>90</I></PAGE></H1>
<H0>Y2K bug, <PAGE><I>258</I></PAGE></H0>
</GROUP>
<GROUP><B>Z</B>
<H0>Z, requirements documentation, <PAGE><I>241</I></PAGE></H0>
</GROUP>
</INDEX>

